{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "Annotations.svelte",
    "Arrows.svelte",
    "Checkbox.svelte",
    "Column.svelte",
    "Conclusion.svelte",
    "Controller.svelte",
    "ControllerWrapper.svelte",
    "Distribution.svelte",
    "Explore.svelte",
    "Food.svelte",
    "Graphs.svelte",
    "Histogram.svelte",
    "InteractiveParent.svelte",
    "InteractiveWrapper.svelte",
    "Intro.svelte",
    "Line.svelte",
    "Methods.svelte",
    "Mini.svelte",
    "MiniCat.svelte",
    "Nude.svelte",
    "NumberDistribution.svelte",
    "Numbers.svelte",
    "Radio.svelte",
    "SectionHed.svelte",
    "Switch.svelte",
    "Table.svelte",
    "Tooltip.svelte",
    "TooltipDisplay.svelte",
    "UI.svelte",
    "Demo.svelte",
    "Icon.svelte",
    "Footer.svelte",
    "Header.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}</style>\n",
    "<script>\n  import { setContext, onMount, getContext } from 'svelte';\n\n    const vals = ['top', 'right', 'bottom', 'left'];\n\n    export let container = undefined;\n    export let annotations = [];\n    let mounted = false;\n\n    $: if (mounted) setContext('annotation-els', Array.from(container.querySelectorAll('.layercake-annotation')));\n\n    onMount(() => {\n        mounted = true;\n    });\n\n    function findLeft(d){\n        const dx = d.textDx ? d.textDx : 0\n        return d.coordinates[0].x + dx\n    }\n\n</script>\n\n<div class='layercake-annotations' bind:this={container}>\n    {#each annotations as d, i}\n        <div class='annotation annotation-bg'\n        style=\"top:{d.coordinates[0].y - d.dy}px; left:{findLeft(d)}px; text-align:{d.mobile ? d.mobile : 'center'}\">{@html d.text}</div>\n        <div class='annotation layercake-annotation'\n        style=\"top:{d.coordinates[0].y - d.dy}px; left:{findLeft(d)}px; text-align:{d.mobile ? d.mobile : 'center'}\">{@html d.text}</div>\n    {/each}\n</div>\n\n<!-- {#each annotations as annotation}\n<div style=\"left: {annotation.x - 175}px; top: {annotation.y}px\" >\n    <p>{@html annotation.text}</p>\n</div>\n{/each} -->\n\n<style>\n    .layercake-annotations {\n        width: 100%;\n        height: 100%;\n        position: relative;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        padding: 0.25rem;\n    }\n    .annotation {\n        font-size: 14px;\n        position: absolute;\n        max-width: 200px;\n        transform: translate(-50%, -5px)\n    }\n\n    @media screen and (max-width: 500px) {\n        .annotation {\n            font-size: 12px;\n            max-width: 150px;\n        }\n    }\n\n    .annotation-bg{\n        font-weight: bold;\n        color: var(--bg)\n    }\n\n    :global(.anno-all){\n        font-weight: bold;\n        color: var(--gray);\n    }\n\n    :global(.anno-nude){\n        font-weight: bold;\n        color: var(--accent-color)\n    }\n    :global(.annotation-bg span) {\n        color: var(--bg)\n    }</style>",
    "<script>\n    import { getContext, onMount } from 'svelte';\n  \n    import { swoopyArrow, getElPosition, parseCssValue } from '../utils/arrowUtils.js';\n  \n    export let annotations = [];\n    export let blockDimensions;\n\n    let mounted = false;\n  \n  \n    const { width, height } = getContext('LayerCake');\n\n    /* --------------------------------------------\n     * Some lookups to convert between x, y / width, height terminology\n     * and CSS names\n     */\n    const lookups = [\n      { dimension: 'width', css: 'left', position: 'x' },\n      { dimension: 'height', css: 'top', position: 'y' }\n    ];\n  \n    let d = () => '';\n    let annotationEls;\n\n    $: if (mounted)  annotationEls = getContext('annotation-els');\n  \n    onMount(() => {\n      mounted = true;\n    });\n\n  \n    function setPath (anno, arrow) {\n    //   return (anno, i, arrow) => {\n        //const arrowSource = getElPosition(el);\n        const dx = anno.dx ? anno.dx : 0\n        const sourceCoords =  [anno.coordinates[0].x - 4 + dx, anno.coordinates[0].y - (anno.dy - anno.arrowOffset)]\n  \n        /* --------------------------------------------\n         * Default to clockwise\n         */\n        const clockwise = arrow[0].clockwise\n  \n        /* --------------------------------------------\n         * Parse where we're drawing to\n         */\n        const targetCoords = [anno.coordinates[0].x + (blockDimensions.blockWidth  - blockDimensions.blockPadding) + dx, anno.coordinates[0].y + (blockDimensions.blockHeight / 2)]\n        \n        /* --------------------------------------------\n         * Create arrow path\n         */\n        return swoopyArrow()\n          .angle(Math.PI / 2)\n          .clockwise(clockwise)\n          .x(q => q[0])\n          .y(q => q[1])([sourceCoords, targetCoords]);\n    //   };\n    }\n  \n    // $: setPath($width, $height)\n  </script>\n  \n  <defs>\n    <marker id=\"arrowhead\" viewBox=\"-10 -10 20 20\" markerWidth=\"17\" markerHeight=\"17\" orient=\"auto\">\n      <path d=\"M-6,-6 L 0,0 L -6,6\" fill=\"black\"/>\n    </marker>\n  </defs>\n  \n  {#if annotations.length}\n    <g class=\"swoops\">\n      {#each annotations as anno, i}\n            <path\n              marker-end='url(#arrowhead)'\n              d={setPath(anno, anno.arrow)}></path>\n      {/each}\n    </g>\n  {/if}\n  \n  <style>\n    .swoops {\n      position: absolute;\n      max-width: 200px;\n      line-height: 14px;\n    }\n    .swoops path {\n      fill: none;\n      stroke: #000;\n      stroke-width: 1;\n    }</style>",
    "<script>\n    // based on suggestions from: \n    // A11y with Lindsey https://www.a11ywithlindsey.com/blog/create-custom-keyboard-accesible-checkboxes\n    // and Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n\n    export let checks;\n    export let legend;\n    export let value = false\n    export let checked = false\n    export let id;\n\n\n    export const slugify = (str = \"\") =>\n        str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"\");\n</script>\n\n\n<!-- hiding default checkbox to style our own -->\n\n\n{#if checks.length > 1}\n    <fieldset>\n        <legend>{legend}</legend>\n        {#each checks as {name, label, selected}}\n        <input class=\"sr-only\" type=\"checkbox\" id={`${slugify(name)}-${id}`} name={name} value={label} bind:group={value} bind:checked>\n        <label for={`${slugify(name)}-${id}`}>\n            {label}\n        </label>\n    {/each}\n    </fieldset>\n{:else}\n    {#each checks as {name, label, selected}}\n        <input class=\"sr-only\" type=\"checkbox\" id={`${slugify(name)}-${id}`} name={name} bind:checked={value}>\n        <label for={`${slugify(name)}-${id}`}>\n            {label}\n        </label>\n    {/each}\n{/if}\n\n\n<style>\n    fieldset {\n        max-width: 25%;\n        border-radius: 2px;\n        border: 1px solid var(--gray-darker)\n    }\n\n    legend {\n        margin: 0 1em;\n        padding: 0 1em;\n        font-weight: bold;\n    }\n    label {\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        line-height: 1.2em;\n    }\n\n    .sr-only {\n        position: absolute;\n        clip: rect(1px, 1px, 1px, 1px);\n        padding: 0;\n        border: 0;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n    }\n\n    input[type='checkbox'] {\n        position: absolute;\n    }\n\n    input[type='checkbox'] + label {\n        display: block;\n        position: relative;\n        padding: 0 1em;\n        text-align: left;\n    }\n\n    input[type='checkbox'] + label::before {\n        content: '';\n        position: relative;\n        display: inline-block;\n        margin-right: 0.5em;\n        width: 1em;\n        height: 1em;\n        background: transparent;\n        border: 1px solid var(--gray);\n        top: 0.2em;\n    }\n\n    input[type='checkbox'] + label::after {\n        content: '';\n        position: absolute;\n        top: 0.45em;\n        left: calc(1em + 4px);\n        border-left: 2px solid var(--accent-color);\n        border-bottom: 2px solid var(--accent-color);\n        width: 0.75em;\n        height: 0.3em;\n        width: 0.5em;\n        transform: rotate(-45deg) scale(0);\n    }\n\n    input[type='checkbox']:checked + label::after {\n        transform: rotate(-45deg) scale(1);\n    }\n\n    input[type='checkbox']:focus + label::before {\n        outline: var(--accent-color) solid 1px;\n        border-radius: 0.1em;\n    }\n\n    input[type='checkbox']:disabled + label {\n        color: darken(var(--gray), 10);\n    }\n\n    input[type='checkbox']:disabled + label::before {\n        background: var(--gray)\n    }\n\n    /* gravy */\n\n    \n    input[type='checkbox'] + label::before {\n        border-radius: 0.1em;\n        transition: background 0.3s ease-out;\n    }\n\n    input[type='checkbox']:checked + label::before {\n        background: var(--accent-color);\n        border-radius: 0.1em;\n        transition: background 0.3s ease-in;\n    }\n\n    input[type='checkbox'] + label::after {\n        border-left: 2px solid white;\n        border-bottom: 2px solid white;\n        transition: transform 0.2s ease-in;\n    }\n\n    input[type='checkbox']:checked + label::after {\n        transition: transform 0.2s ease-in;\n    }\n\n    input[type='checkbox']:focus + label::before {\n        outline: var(--accent-color) solid 1px;\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 0.1em;\n    }</style>",
    "<script>\n    export let group;\n\n</script>\n\n<div class='histogram__column'>\n    {#each group as d, i}\n        <p class='shade' style=\"color:{d[1][0].hex}\" >{d[0]}</p>\n    {/each}\n</div>\n\n<style>\n    .histogram__column {\n        width: 10em;\n        margin-right: 0.5em;\n    }\n\n    .shade {\n        margin: 0.05em 0;\n    }</style>",
    "<script>\n    import copy from \"../data/copy.json\";\n    </script>\n    \n    <section class='conclusion'>\n        <div class='container'>\n            {#each copy.conclusion as {type, value}}\n                <p class='prose'>{@html value}</p>\n            {/each}\n        </div>\n\n    \n    </section>\n\n    <style>\n        section {\n            margin-bottom: 3rem;\n        }</style>",
    "<script>\n    import TooltipDisplay from \"./TooltipDisplay.svelte\"\n    import { getContext, onMount } from 'svelte';\n\n\n    export let blockDimensions;\n    export let options;\n    export let currentGroup;\n    export let groupedData;\n    export let controllerContainer;\n    export let groupActive = false;\n    export let flatData;\n    export let wordIndex;\n    export let lineData;\n \n\n    let groupSelOutline;\n    export let found;\n    export let exploreSwatches;\n    let ind = 0\n    let groupCount = groupedData.length\n    let groupLabel = 'Group of swatches'\n    let srValue;\n    $: selGroupData = groupedData[currentGroup]\n    $: selLineData = lineData.length > 0 ? lineData.filter(d => {\n        const x0 = d.x0\n        return x0 === selGroupData[0]\n    })[0] : ''\n\n    $: ({blockWidth, blockHeight, blockPadding} = blockDimensions);\n\n    const { data, xGet, yGet, width, xScale, height} = getContext('LayerCake')\n\n    function roundNumber(num){\n        return Math.round(num * 100) / 100\n    }\n\n    function moveFocus(el){\n        el.focus();\n    }\n    \n\n    function updateGroupLabel(currentGroup, found, exploreSwatches){\n            ind = 0;\n            if (found !== '') groupLabel = `Name: ${found.name}. Brand: ${found.brand}. Product: ${found.product}.`\n            else if (lineData.length > 0) groupLabel = `${selLineData.count} shades at lightness level. ${selLineData.allCount} shades expected.`\n            else if (currentGroup === 0) groupLabel = `Darkest shades. Group 1 of ${groupCount}. ${selGroupData[1].length} Swatches. Lightness ${roundNumber(groupedData[0][0])} - ${roundNumber(groupedData[1][0])}`\n            else if (currentGroup === groupCount - 1)  groupLabel = `Lightest shades. Group ${groupCount} of ${groupCount}. ${selGroupData[1].length} Swatches. Lightness ${roundNumber(selGroupData[0])} - 0.99`\n            else groupLabel = `Group ${currentGroup + 1} of ${groupCount}. ${selGroupData[1].length} Swatches. Lightness ${roundNumber(selGroupData[0])} - ${roundNumber(groupedData[currentGroup + 1][0])}`\n    \n    }\n\n    $: updateGroupLabel(currentGroup, found, exploreSwatches)\n\n</script>\n\n{#if options.includes('histogram') || options.includes('natural') || options.includes('line')}\n\n    {#if options.includes('histogram' || options.includes('natural'))}\n        <div aria-hidden=true\n            class={groupActive ? 'group-select active' : 'group-select'}\n            style=\"width:{blockWidth + (blockPadding * 2)}px; height:{selGroupData[1].length * (blockHeight + blockPadding) + blockPadding}px; left:{$xScale(selGroupData[0])}px\"\n        >\n    </div>\n    {/if}\n    {#if options.includes('line')}\n    <div aria-hidden=true\n        class={'group-select'}\n        style=\"width:{blockWidth + (blockPadding * 2)}px; height:100%; left:{$xScale(selGroupData[0])}px\"\n    >\n    </div>\n    {/if}\n        {#key groupLabel}\n            <figure>\n                <div class='sr-only' role='img' tabindex=\"-1\"  bind:this={srValue} use:moveFocus aria-label={groupLabel}>\n                    {groupLabel}\n                </div>\n            </figure>\n        {/key}\n\n    {#if exploreSwatches === true}\n        <TooltipDisplay selected={found} width={$width} {blockDimensions} height={$height} xScale={$xScale} />\n    {/if}\n{/if}\n\n{#if options.includes('wordwall') && wordIndex}\n        <ol class='sr-only' aria-label={`List of ${flatData.length} shade names, ordered darkest to lightest`}>\n            {#key wordIndex}\n                <li role=\"listitem\" aria-label={`${flatData[wordIndex].name}. Shade ${wordIndex} of ${flatData.length}`} tabindex=\"-1\" use:moveFocus>{`${flatData[wordIndex].name}. Shade ${wordIndex} of ${flatData.length}`}</li>\n            {/key}\n        </ol>\n{/if}\n\n\n\n<style>\n    .group-select{\n        bottom: 0;\n        position: absolute;       \n        outline: none;\n        box-shadow: none;\n    }\n\n    .group-select.active {\n        outline: 3px solid var(--accent-color);\n        box-shadow: 0 0px 8px var(--accent-color);\n    }\n\n    .sr-only {\n        position: absolute;\n        clip: rect(1px, 1px, 1px, 1px);\n        padding: 0;\n        border: 0;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n    }</style>\n\n",
    "<script>\n    import { getContext } from 'svelte';\n    import { groups } from 'd3-array';\n    import Controller from './Controller.svelte'\nimport Explore from './Explore.svelte';\n    \n    const { data, width, height, xScale } = getContext('LayerCake')\n    export let blockDimensions;\n    export let options;\n    export let lineData;\n    export let title;\n\n    let controllerContainer;\n    let exploreSwatches = false;\n    let found = ''\n    let groupActive = false;\n    let takeoverKeys = true;\n    $: groupedData = groups($data, d => d.binStart)\n    $: totalGroups = groupedData.length\n    let currentGroup = 0\n    let ind = 0\n    let wordIndex = 0;\n    let explore = false;\n  \n\n    function handleKeyDown(event){\n        const key = event.key;\n        explore = true;\n\n        // key bindings for histograms\n        if (options.includes('histogram') || options.includes('natural') || options.includes('line')){\n            if (key === 'ArrowRight') {\n                let newGroup = currentGroup < totalGroups - 1 ? currentGroup + 1 :  0;\n                currentGroup = newGroup\n                found = ''\n                groupActive = true;\n                takeoverKeys = true;\n                exploreSwatches = false;\n            }\n            else if (key === 'ArrowLeft') {\n                let newGroup = currentGroup === 0 ? totalGroups - 1 : currentGroup - 1 \n                currentGroup = newGroup\n                found = ''\n                groupActive = true;\n                takeoverKeys = true;\n                exploreSwatches = false;\n            }\n            else if (key === 'Shift' && key === 'Tab' || key === 'Escape' || key === 'Tab') {\n                exploreSwatches = false;\n                controllerContainer.focus();\n                groupActive = false;\n                takeoverKeys = false;\n            }\n            else if (key === 'ArrowUp' || key === 'ArrowDown'){\n                exploreSwatches = true;\n                const swatches = groupedData[currentGroup][1]\n                const total = swatches.length - 1\n                groupActive = false;\n                takeoverKeys = true;\n                if (key === 'ArrowUp'){\n                    // if index is greater than total, start at the total\n                    // if the index is equal to the total, go back to 0 otherwise, add one\n                    // otherwise, add one\n                    let newIndex;\n                    if (ind > total) newIndex = total;\n                    else if (ind === total) newIndex = 0;\n                    else newIndex = ind + 1\n                    ind = newIndex \n                    found = swatches[newIndex]\n                } else {\n                    // if index is greater than total, start at the total\n                    // if it's equal to 0, go to the total\n                    // otherwise, subtract one\n                    let newIndex;\n                    if (ind > total || ind === 0) newIndex = total\n                    else newIndex = ind - 1\n                    ind = newIndex\n                    found = swatches[newIndex]\n                }\n            }\n            else {\n                exploreSwatches = false\n                takeoverKeys = false\n            }       \n            console.log({exploreSwatches})\n\n        }\n\n        // key bindings for word wall\n        else if (options.includes('wordwall')){\n            const totalWords = $data.length - 1\n            // right and down arrows\n            if (key === 'ArrowRight' || key === 'ArrowDown'){\n                const newWordIndex = wordIndex === totalWords ? 0 : wordIndex + 1\n                wordIndex = newWordIndex\n            }\n            // left and up arrows\n            if (key === 'ArrowLeft' || key === 'ArrowUp'){\n                const newWordIndex = wordIndex === 0 ? totalWords : wordIndex - 1\n                wordIndex = newWordIndex\n            }\n        }\n        if (takeoverKeys === true) event.preventDefault();\n    }\n\n    function clearKeyboard(){\n        takeoverKeys = false;\n        groupActive = false;\n        exploreSwatches = false;\n        explore = false;\n    }\n\n    function createAccessibleTitle(title, options){\n        if (options.includes('histogram')){\n            return `Histogram showing ${title}, sorted from dark to light. Graph contains ${totalGroups} columns. Navigate between columns using LEFT and RIGHT arrows and explore swatches within each column using UP and DOWN. Use ESCAPE to exit.`\n        }\n        else if (options.includes('line')){\n            return `Overlapping area chart showing distribution of ${title} compared to all shades, sorted from dark to light. Graph contains ${totalGroups} points of comparison. Navigate between them using the LEFT and RIGHT arrows.  Use ESCAPE to exit.`\n        } else if (options.includes('wordwall')) \n        {return `A list of shade names for ${title} sorted from dark to light. Progress through the list using the arrow keys. Exit using ESCAPE.`}\n    }\n\n    // let ariaLabel;\n\n    // $: {\n    //     if (options.includes('histogram')) ariaLabel = 'This is a histogram showing foundation swatches sorted by lightness level. Use the arrow keys to move between groups and swatches'\n    //     if (options.includes('line')) ariaLabel = 'This is a histogram showing the foundation swatches sorted by lightness level, compared to the number of swatches expected at each lightness level. Use the arrow keys to move between groups and swatches.'\n    //     if (options.includes('wordwall')) ariaLabel = 'This is a list of the names of foundation shades. Use your arrow keys to move between names.'\n    // }\n\n</script>\n\n<svelte:window on:mousemove={clearKeyboard} on:click={clearKeyboard} />\n\n<div class='controller' tabindex=\"0\" role=\"application\" \n    aria-roledescription=\"data visualization\" \n    aria-label={createAccessibleTitle(title, options)}\n    aria-activedescendant=\"null\"\n    on:keydown={handleKeyDown} bind:this={controllerContainer} >\n    <p aria-hidden='true'>Use your arrow keys to explore the swatches. TAB or ESC to exit.</p>\n    {#if controllerContainer && explore}\n        <Controller {blockDimensions} {options} {currentGroup} {groupedData} {controllerContainer} {found} {exploreSwatches} {groupActive} flatData={$data} {wordIndex} {lineData} />\n    {/if}\n</div>\n\n<style>\n    .controller{\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: flex;\n    }\n    .controller:focus{\n        outline: 4px solid var(--accent-color)\n    }\n\n    .controller p {\n        display: none;\n    }\n\n    .controller:focus p {\n        display: inline-block;\n        text-align: center;\n        margin: 0 auto;\n        color: var(--gray);\n        text-transform: uppercase;\n    }</style>",
    "<script>\n    import data from \"../data/shades_export.csv\"\n    import { LayerCake, flatten } from \"layercake\";\n    import Mini from './Mini.svelte'\n    import { extent, range, bin, groups, ascending, rollups } from 'd3-array'\n    import SmallMultContainer from \"./SmallMultContainer.svelte\"\n\n    let maxCol = 10;\n\n    $: console.log({data})\n\n\n    // figure out which bin each shade goes in\n    $: lightBin = bin().thresholds(maxCol).domain([0, 1]).value(d => d.lightness)\n\n    function findPercent(group){\n       return group[1].map(g => ({\n           ...g,\n           percent: g.length / group[0].length\n       }))\n    }\n\n    let condensedData = []\n    $: lightBin(data.filter(d => d.category !== 'NA')).forEach((bin, i) => {\n            if (bin.length > 0){\n                const sorted = bin.sort((a,b) => ascending(a.category, b.category))\n                const roll = rollups(sorted, v => v.length, d => d.category).map(d => ({\n                    category: d[0],\n                    count: d[1],\n                    percent: Math.round(d[1] / sorted.length * 100),\n                    hex: sorted[0].hex, \n                    group: i\n                }))\n \n                condensedData.push(roll) \n            } else condensedData.push([])\n        })\n\n\n    $: flatterData = flatten(condensedData)\n \n    $: flatData = flatten(flatterData)\n\n    $: categories = groups(flatData, d => d.category)\n    $: catData = [];\n\n\n    $: categories.forEach(cat => {\n            const filledIn = range(0, 10).map(i => {\n                const val = cat[1]\n                const matched = val.filter(d => d.group === i + 1)\n                return matched.length === 0 ? { group: i + 1, percent: 0} : matched[0];\n            })\n            catData.push({category: cat[0], values: filledIn})\n        })\n            \n\n\n</script>\n\n<section>\n    <p>I found approximately 9 naming categories used. The most common (not shown but used for 24% of shade names) is to just use a number or letter system. Of the naming systems that use words, these are the categories:</p>\n<ul>\n    <li><strong>Color</strong>: Using a word that is known to refer to a specific color (e.g., \"brown\", \"beige\", \"yellow\" etc.)</li>\n    <li><strong>Descriptor</strong>: These are words used alone that typically act as adjectives (e.g., \"light\", \"dark\" etc.)</li>\n    <li><strong>Drink</strong>: Colors that refer to beverages or other liquids (e.g., \"espresso\", \"rum\", \"tea\", \"milk\" etc.)</li>\n    <li><strong>Food</strong>: Colors that refer to foods (e.g., \"custard\", \"praline\", \"truffle\" etc.)</li>\n    <li><strong>Rock</strong>: Colors that refer to rocks, gemstones, or other geological or natural structures (e.g., \"sand\", \"ivory\", \"amber\", \"alabaster\" etc.)</li>\n    <li><strong>Skin</strong>: These are words that are often used as synonyms for skin or nudity (e.g., \"nude\", \"natural\", \"tan\" etc.)</li>\n    <li><strong>Wood</strong>: These are words that are most commonly used in reference to wood or other plants (e.g., \"mahogany\", \"hazel\", \"oak\" etc.)</li>\n    <li><strong>Misc.</strong>: These are words that didn't seem to fall into any other category (e.g., \"copper\", \"dusk\", \"unstoppable\", \"suede\" etc.</li>\n</ul>\n\n\n\n<div class='chart-container'>\n    <h2>Naming Category Distribution by Foundation Shade</h2>\n    {#each condensedData as data}\n        <div class='mini-container'>\n            <SmallMultContainer {data} type = \"byShade\"/>\n        </div>\n    {/each}\n</div>\n\n\n    <h2>Percent of Total Shades in Each Lightness Range by Category</h2>\n<div class='chart-container'>\n\n    {#each catData as data}\n        <div class='cat-container'>\n            <SmallMultContainer {data} type = \"byCat\"/>\n        </div>\n    {/each}\n</div>\n</section>\n\n<style>\n\n    section {\n        margin: 1rem;\n    }\n\n    .chart-container {\n        display: flex;\n        flex-wrap: wrap;\n        \n    }\n\n    .mini-container {\n        max-width: 40%;\n        width: 40%;\n        border: 1px solid #000;\n        margin: 1em;\n        padding: 0.5em;\n    }\n\n    .cat-container{\n        max-width: 30%;\n        width: 30%;\n        border: 1px solid #000;\n        margin: 1em;\n        padding: 0.5em;\n    }</style>",
    "<script>\n    import data from \"../data/shades_export.csv\"\n    import copy from \"../data/copy.json\";\n    import SwatchHistogram from \"./SwatchHistogram-old.svelte\"\n    import { group, ascending} from 'd3-array'\n    import Gradient from \"./Gradient.svelte\"\n    import Line from \"./Line.svelte\"\n    import GradientAnnotation from \"./GradientAnnotation.svelte\"\n    import { LayerCake, Canvas, Svg } from \"layercake\";\n    import Switch from \"./Switch.svelte\"\n    import Radio from \"./Radio.svelte\"\n    import Interactive from \"./Interactive.svelte\"\n    import Checkbox from \"./Checkbox.svelte\"\n    import SectionHed from \"./SectionHed.svelte\"\n    import InteractiveWrapper from \"./InteractiveWrapper.svelte\"\n    import extendedHeight from './../stores/stores.js';\n\n    let options = ['histogram', 'gradient', 'majority', 'tooltip']\n    let UIOptions = ['radio', 'dropdown']\n\n    let exHeight;\n    let containerHeight = 100;\n    let heightMeasure = 'vh'\n\n    $: cleanData = data.map(d => ({\n        ...d,\n        categories: d.categories.split(', ')\n    }))\n\n    $: extendedHeight.subscribe(val => exHeight = val)\n\n\n    function determineHeight(exHeight){\n        if (exHeight['explore'].expanded === true) return `${exHeight['explore'].height + containerHeight + 4}px`\n        return `${containerHeight}${heightMeasure}`\n    }\n\n    $: filterData = cleanData\n   \n</script>\n\n<section id='explore'>\n\n<SectionHed text={'Explore'} />\n\n{#each copy.explore as {type, value}}\n    <p class='prose'>{@html value}</p>\n{/each}\n\n<div class='container' style=\"height:{determineHeight(exHeight)}\">\n    <InteractiveWrapper title={`Explore all ${filterData.length} shades`} filteredData={filterData} \n    allData={cleanData} {options} {UIOptions} id={'explore'}/>\n</div>\n\n</section>\n\n\n\n\n<style>\n\n    section {\n        padding: 0 1rem;\n    }\n    .container{\n        margin: 3rem auto;\n        max-width: 1000px;\n        border: 1px solid var(--gray);\n        padding: 1rem 1.5rem;\n        box-shadow: 12px -12px 0 -1px var(--white), 12px -12px 0 0 var(--gray);\n    }</style>",
    "<script>\n    import data from \"../data/shades_export.csv\"\n    import SwatchHistogram from \"./SwatchHistogram-old.svelte\"\n    import Gradient from \"./Gradient.svelte\"\n    import Line from \"./Line.svelte\"\n    import GradientAnnotation from \"./GradientAnnotation.svelte\"\n    import { LayerCake, Canvas, Svg } from \"layercake\";\n    import Switch from \"./Switch.svelte\"\n    import Interactive from \"./Interactive.svelte\"\n    import copy from \"../data/copy.json\";\n    import SectionHed from \"./SectionHed.svelte\"\n    import InteractiveWrapper from \"./InteractiveWrapper.svelte\"\n    import UI from \"./UI.svelte\"\n    import extendedHeight from './../stores/stores.js';\n\n\n    const xKey = 'lightness'\n    const blockWidth = 20;\n    $: blockHeight = blockWidth / 4;\n\n    $: cleanedData = data.map(d => ({\n        ...d,\n        categories: d.categories.split(', ')\n    }))\n\n\n    //$: filteredData = data.filter(d => d.category === 'food').filter(d => switchValue === 'varied' ? d.namingScheme === 'variety' : d.namingScheme === 'NA' )\n\n    let exHeight;\n    let containerHeight = 600;\n    let heightMeasure = 'vh'\n\n    $: extendedHeight.subscribe(val => exHeight = val)\n\n\n    const sections = ['drink', 'food']\n\n    function filterData(sectionName){\n        const cat = data.filter(d => d.categories.includes(sectionName))\n\n        return cat\n    }\n\n    let options = ['histogram', 'gradient', 'majority', 'tooltip']\n    let UIOptions = ['radio']\n\n    function determineHeight(sectionLabel, exHeight){\n        if (exHeight[sectionLabel].expanded === true) return `${exHeight[sectionLabel].height + containerHeight + 4}px`\n        return `${containerHeight}px`\n    }\n\n</script>\n\n<section id='food'>\n<SectionHed text={'Food and Drinks'} />\n\n{#each copy.foodIntro as {type, value}}\n    <p class='prose'>{@html value}</p>\n{/each}\n\n{#each sections as sectionLabel (sectionLabel)}\n    <div class='container' style=\"height:{determineHeight(sectionLabel, exHeight)}\">\n        <InteractiveWrapper title={`${filterData(sectionLabel).length} shades with ${sectionLabel} items in the name`} filteredData={filterData(sectionLabel)} \n        allData={data} {options} {UIOptions} id={sectionLabel}/>\n    </div>\n\n    {#each copy[sectionLabel] as {type, value}}\n    <p class='prose'>{@html value}</p>\n    {/each}\n{/each}\n</section>\n\n\n\n\n<style>\n    .container{\n        /* height: 90vh; */\n        max-width: 50rem;\n        margin: 3rem auto;\n        border: 1px solid var(--gray);\n        padding: 1rem 1.5rem;\n        box-shadow: 12px -12px 0 -1px var(--white), 12px -12px 0 0 var(--gray);\n    }\n\n    .chart-container.drink{\n        height: 400px;\n    }\n\n    .chart-title {\n        font-size: 24px;\n        font-weight: bold;\n        text-align: center;\n    }</style>",
    "<script>\n    import Histogram from \"./Histogram.svelte\"\n    import GradientHistogram from \"./GradientHistogram.svelte\"\n    import { LayerCake, Canvas } from \"layercake\";\n    import { scaleBand, scaleLinear } from 'd3-scale';\n    import { extent, range, bin, groups, ascending, rollups, descending } from 'd3-array'\n    import data from \"../data/shades_export.csv\"\n\n    export let prose;\n    let maxCol = 10;\n\n\n    // figure out which bin each shade goes in\n    $: lightBin = bin().thresholds(maxCol).domain([0, 1]).value(d => d.lightness)\n\n    $: filteredData = data.filter(d => d.base !== (\"NA\")).filter(d => d.base !== \"\")\n\n\n    $: allBinData = lightBin(filteredData)\n\n    $: top = []\n    $: allBinData.forEach(bin => {\n       const groups = rollups(bin, v => v.length, d => d.name).sort((a, b) => descending(a[1], b[1])).slice(0,5)\n        top.push(groups)\n    })\n\n\n    function filterData(cut){\n        let binnedData = null;\n        if (cut === 'numbers') binnedData = lightBin(data.filter(d => d.category === 'NA'))\n        else if (cut === 'rock') binnedData = lightBin(data.filter(d => d.category === 'rock' || d.category === 'gem'))\n        else if (cut === 'wood') binnedData = lightBin(data.filter(d => d.category === 'wood' || d.category === 'plant'))\n        else binnedData = lightBin(data.filter(d => d.category === cut))\n\n        // condense multiple instances of a single name into one\n        let condensedData = []\n        binnedData.forEach(bin => {\n            if (bin.length > 0){\n                const sorted = bin.sort((a,b) => ascending(a.name, b.name) )\n                condensedData.push(groups(sorted, d => d.name)) \n            } else condensedData.push([])\n        })\n\n        return condensedData;\n    }\n\n    function filterFlat(cut){\n        if (cut === 'numbers') return data.filter(d => d.category === 'NA')\n        else return data.filter(d => d.category === cut)\n    }\n</script>\n\n\n\n{#each prose as {sub, text}}\n    <h3>{sub}</h3>\n    <!-- <p class='prose'>{text}</p>\n    <div class='chart-container'>\n        <LayerCake data={filterData(sub)}>\n            <Histogram />\n        </LayerCake>\n    </div> -->\n\n    <div class='chart-container container-grad'>\n        <LayerCake data={filterFlat(sub)}>\n            <Canvas>\n                <GradientHistogram />\n            </Canvas>\n\n        </LayerCake>\n    </div>\n    \n{/each}\n\n<style>\n    h3 {\n        text-transform: uppercase;\n        text-align: center;\n        font-weight: bold;\n        margin-top: 3em;\n    }\n\n    p {\n        text-align: center;\n    }\n\n    .container-grad {\n        height: 300px;\n    }</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n    import Column from \"./Column.svelte\"\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data } = getContext('LayerCake');\n\n</script>\n\n<div class='histogram__container'>\n\n    {#each $data as d, i}\n        <Column group = {d} />\n    {/each}\n</div>\n\n<style>\n    .histogram__container{\n        display: flex;\n        flex-direction: row;\n    }</style>\n\n",
    "<script>\n    import { flatten, LayerCake } from \"layercake\";\n    import { onMount } from \"svelte\";\n    import Interactive from \"./Interactive.svelte\";\n    import { bin, shuffle, range, ascending, least, greatest } from 'd3-array'\n\n    export let data;\n    export let filteredData;\n    export let width;\n    export let id;\n    export let title;\n    $: blockWidth = filteredData.length < 1000 ? 20 : 10;\n    $: blockHeight = Math.ceil(blockWidth / 3);\n    $: blockPadding = filteredData.length < 1000 ? 2 : 1;\n    let totalHeight;\n    let mounted = false;\n    export let options = [];\n    onMount(() => mounted = true)\n\n    $: blockDimensions = {blockWidth, blockHeight, blockPadding}\n    // dimensions \n    const margins = {\n        top: 50,\n        left: 20,\n        right: 20, \n        bottom: 10\n    }\n\n    function findDifferences(binnedFiltered, binnedAll){\n        const leastMissing = least(comboData, (a, b) => ascending(a.difference, b.difference) )\n        const greatestMissing = greatest(comboData, (a, b) => ascending(a.difference, b.difference) )\n\n        return {leastMissing, greatestMissing}\n    }\n\n    function flattenBins(binnedData, colNum){\n        let flatBins = []\n        let onlyPositions;\n\n        binnedData.forEach((bin, i) => {\n            const swatches = bin.map((d, ind) => ({\n                ...d,\n                binStart: bin.x0,\n                index: ind\n            }))\n\n            flatBins.push(swatches)\n        })\n\n        const semiFlat = flatten(flatBins);\n        const intFlat = flatten(semiFlat).map((d, i) => ({\n            ...d,\n            id: i\n        }))\n\n        const flattenedData = intFlat;\n\n        let exportFlat = flattenedData\n\n        if (options.includes('shuffled')){\n            const shuffled = shuffle(intFlat.slice())\n\n            const shuffledFlat = shuffled.map((d, i) => {\n                const row = ~~ (i / colNum)\n                const binNum = i - (colNum * row)\n                const newX0 = binnedData[binNum].x0\n                return {\n                    ...d,\n                    index: row,\n                    binStart: newX0\n                }\n            })\n\n            exportFlat = shuffledFlat.sort((a, b) => ascending(a.id, b.id))\n\n        } \n\n        return exportFlat;\n\n    }\n\n    function generateLineData(binnedFiltered, binnedAll){\n        const filterLimited = binnedFiltered.map(d => ({\n            ...d,\n            x0: d.x0,\n            count: d.length,\n            percent: d.length / filteredData.length\n        }))\n\n        const allLimited = binnedAll.map(d => ({\n            x0: d.x0,\n            count: d.length,\n            percent: d.length / data.length\n        }))\n\n        return filterLimited.map((d, i) => ({\n            ...d, \n            allCount: Math.round(allLimited[i].percent * (filteredData.length)),\n            difference: Math.round(allLimited[i].percent * (filteredData.length)) - d.count\n        }))\n    }\n\n    let flattenedData;\n    let lineData;\n    $: colNum = Math.round((width - margins.right - margins.left) / ((blockPadding * 2) + blockWidth))\n\n    $: if (colNum) {\n        // trigger update when options updates\n        let _ = options;\n\n        // bin filtered data\n        let lightBin = bin()\n            .thresholds((filteredData, min, max) => range(colNum).map(t => min + (t / colNum) * (max - min)))\n            .domain([0.15, 0.99])\n            .value(d => +d.lightness)\n\n        let binnedFiltered = lightBin(filteredData);\n        let binnedAll = lightBin(data);\n\n        // flatten data\n        flattenedData = flattenBins(binnedFiltered, colNum)\n\n        const largestBin = greatest(binnedFiltered.map(d => (d.length)))\n        const newHeight = (width / largestBin) - blockPadding\n        const testHeight = (totalHeight/largestBin) - blockPadding\n        const preferredHeight = blockWidth / 3\n\n        blockHeight = Math.floor(Math.max(2, Math.min(testHeight, preferredHeight)))\n\n        lineData = options.includes('line') ? generateLineData(binnedFiltered, binnedAll) : [];\n    }\n   \n    \n    \n</script>    \n{#if flattenedData && mounted}\n<div class='lc-container' bind:clientHeight={totalHeight}>\n\n        <LayerCake data={flattenedData} x={d => d.lightness}\n            xDomain={[0.15, 0.99]}> \n\n            <Interactive {options} {blockDimensions} {lineData} {id} {title}/>\n        </LayerCake>\n\n\n</div>\n    {/if}\n<style>\n    .lc-container{\n        position: relative;\n        height: 90%;\n        min-height: 200px;\n        width: 100%;\n    }</style>",
    "<script>\n    import { onMount } from \"svelte\";\n    import {group, ascending} from 'd3-array';\n    import { flatten } from 'layercake'\n    import InteractiveParent from \"./InteractiveParent.svelte\"\n    import UI from \"./UI.svelte\"\n    import extendedHeight from './../stores/stores.js';\n\n    export let title;\n    export let filteredData;\n    export let allData;\n    export let options;\n    export let UIOptions;\n    export let id;\n    export let containerHeight;\n    let bottomHeight;\n\n    let exHeight;\n    let ogHeight = 0;\n\n\n    $: if (ogHeight === 0 && containerHeight) ogHeight = containerHeight;\n\n\n    // setting up dropdown menu data\n    let allBrands = Array.from(group(allData, d => d.brand)\n        .keys())\n        .sort((a, b) => ascending(a.toLowerCase(), b.toLowerCase()))\n    allBrands.unshift('All')\n\n    let allCategories = [...new Set(flatten(allData.map(d => d.categories)))]\n        .sort((a, b) => ascending(a.toLowerCase(), b.toLowerCase()))\n    allCategories.unshift('all')\n\n\n    let radioValue;\n    let checkValue;\n    let brandSel;\n    let categorySel;\n    $: if (radioValue){\n        if (radioValue === 'swatches') options = ['histogram', 'gradient', 'majority', 'tooltip']\n        if (radioValue === 'names') options = ['wordwall']\n        if (radioValue === 'table') options = ['table']\n    }\n\n    $: if (checkValue === true) {\n        options = ['gradient', 'majority', 'line', 'allLine', 'annotations', 'explore']\n    } else if (checkValue == false) { options = ['histogram', 'gradient', 'majority', 'tooltip']}\n\n    function filterData(categorySel, brandSel){\n\n        let filtered;\n        if (categorySel === 'all' && brandSel === 'All') filtered = allData;\n        else if (categorySel === 'all' && brandSel !== 'All') filtered = allData.filter(d => d.brand === brandSel);\n        else if (categorySel !== 'all' && brandSel === 'All') filtered = allData.filter(d => d.categories.includes(categorySel));\n        else filtered = allData.filter(d => d.categories.includes(categorySel) && d.brand === brandSel)\n\n        // filteredLength = filtered.length\n\n        // finding all categories for selected brand\n\n        if (brandSel === 'All'){\n            allCategories = [...new Set(flatten(allData.map(d => d.categories)))].sort((a, b) => ascending(a, b)).filter(d => d !== 'NA')\n            allCategories.unshift('all')\n        } \n        else {\n            const selBrand = allData.filter(d => d.brand === brandSel)\n            allCategories = [...new Set(flatten(selBrand.map(d => d.categories)))].sort((a, b) => ascending(a, b)).filter(d => d !== 'NA')\n            allCategories.unshift('all')\n        }\n\n        filteredData = filtered\n    }\n\n    let width;\n    let mounted = false;\n\n    $: if (brandSel || categorySel) filterData(categorySel, brandSel)\n\n\n    function expandGraphic(){\n        exHeight[id].expanded = !exHeight[id].expanded\n\n        extendedHeight.set(exHeight)\n    }\n\n    function collapseGraphic(){\n        exHeight[id].expanded = false\n\n        extendedHeight.set(exHeight)\n    }\n\n    // $: if (radioValue !== 'names' && exHeight && exHeight[id]) collapseGraphic()\n\n    onMount(() => {\n        mounted = true    \n        extendedHeight.subscribe((value) => exHeight = value)\n    })\n</script>\n\n<div class='container' bind:clientWidth={width} bind:clientHeight={containerHeight}>\n\n    <div class='container--top'>\n        <p class='chart-title'>{title}</p>\n\n        {#if UIOptions}\n            <UI {UIOptions} {id} bind:radioValue bind:checkValue bind:brandSel bind:categorySel {allBrands} {allCategories}/>\n        {/if}\n    </div>\n\n    <div class='container--bottom' bind:clientHeight={bottomHeight}>\n        {#if mounted}\n            {#key containerHeight}\n            <InteractiveParent {filteredData} data = {allData} {options} {width} {id} {title}/>\n            {#if exHeight[id] && exHeight[id].height > (ogHeight * 0.7) && radioValue === 'names'}              \n            {#if exHeight[id].expanded === false}\n                    <div class='gradient'></div>\n                {/if}\n                <div class='more-container'>\n                    <button on:click = {() => expandGraphic()}>{exHeight[id].expanded ? 'Show Fewer' : 'Show All'}</button>\n                </div>\n            {/if}\n\n            {/key}\n        {/if}\n    </div>\n\n</div>\n\n\n<style>\n    .chart-title {\n        font-size: 24px;\n        font-weight: bold;\n        text-align: center;\n        margin: 0 auto;\n    }\n\n    .container {\n        height: 100%;\n        pointer-events: none;\n        display: flex;\n        flex-direction: column;\n    }\n\n    .container--top {\n        max-height: 30%;\n    }\n\n    .container--bottom {\n        min-height: 70%;\n        height: 80%;\n        position: relative;\n    }\n\n    .more-container {\n        pointer-events: all;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 1rem;\n        z-index: 10;\n        background-color: var(--bg);\n        width: 100%;\n        position: absolute;\n        bottom: 0;\n    }\n\n    .gradient {\n        pointer-events: none;\n        height: 50px;\n        width: 100%;\n        position: absolute;\n        bottom: 4rem;\n        left: 0;\n        background: linear-gradient(0deg, #FFFFFF 0%, rgba(255, 255, 255, 0) 100%);\n    }</style>",
    "<script>\nimport copy from \"../data/copy.json\";\n</script>\n\n<section class='intro'>\n    <div class='header'>\n        <h1 class='hed'>{copy.title}</h1>\n        <h2 class='dek'>{copy.dek}</h2>\n    </div>\n\n    <div class='meta'>\n        <div class='byline-container'>\n            <p class='byline'>{@html copy.storyBy}</p>\n            <p class='byline'>{@html copy.codeBy}</p>\n        </div>\n\n        <time>{copy.date}</time>\n    </div>\n\n\n    {#each copy.intro as {type, value}}\n        <p class='prose'>{@html value}</p>\n    {/each}\n\n</section>\n\n<style>\nsection {\n    max-width: 50rem;\n    margin: 0 auto;\n}\n\n/* .prose {\n    max-width: 50rem;\n    margin: 0 auto;\n} */\n.hed {\n    font-family: 'Tiempos Headline Web';\n    font-size: 100px;\n    text-align: center;\n    line-height: 1.2;\n    margin-top: 2rem;\n    margin-bottom: 0;\n}\n.dek {\n    font-size: 28px;\n    text-transform: uppercase;\n    color: var(--gray);\n    font-family: 'National 2 Narrow Web';\n    font-weight: 200;\n    text-align: center;\n    margin: 0.25em auto 0;\n    max-width: 22rem;\n    line-height: 1;\n}\n\n\n.meta {\n    margin: 0 auto 3rem;\n    color: var(--gray-dark);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    max-width: 30rem;\n    font-family: 'National 2 Narrow Web'\n}\n\n\n.byline-container {\n    color: var(--gray-dark);\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-direction: column;\n    margin-top: 2rem;\n}\n\n.byline {\n    margin: 0.1rem;\n    color: var(--gray);\n}\n\ntime {\n    text-align: center;\n    margin: 0.75rem auto 0;\n    color: var(--gray);\n}</style>",
    "<script>\n    import { getContext } from 'svelte';\n    import { extent, range, bin, shuffle, ascending, max } from 'd3-array'\n    import { format } from 'd3-format';\n    import { scaleLinear } from 'd3-scale';\n    import { line, curveStepBefore } from 'd3-shape';\n    import { fade } from 'svelte/transition'\n\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data, x, width, height, xScale } = getContext('LayerCake');\n\n\n    const formatNumber = format('.1f')\n\n    // data as prop, not from layercake!\n    // export let allData;\n    export let lineData = [];\n    export let blockDimensions;\n    export let options;\n    $: ({blockWidth, blockHeight, blockPadding} = blockDimensions);\n \n\n    const margins = {\n        top: 50,\n        left: 20,\n        right: 20, \n        bottom: 0\n    }\n\n    $: lineGenerator = line()\n        .x(d => $xScale(d.x1))\n        .y(d => $height - margins.bottom - (+d.count * (blockHeight + blockPadding)))\n        .curve(curveStepBefore)\n\n    $: allLineGenerator = line()\n        .x(d => $xScale(d.x1))\n        .y(d => $height - margins.bottom - (+d.allCount * (blockHeight + blockPadding)))\n        .curve(curveStepBefore)\n\n    $: lineData.push({count: 0, x1: 1, allCount: 0})\n    $: lineData.unshift({count: 0, x1: 0.15, allCount: 0})\n\n    $: linePath = allLineGenerator(lineData)\n    $: filteredLine = lineGenerator(lineData)\n  \n   \n\n\n    \n</script>\n\n{#if lineData.length > 0}        \n    <path class='path-line filtered' transition:fade d={filteredLine}></path>\n    {#if options.includes('allLine')}\n        <path class='path-line full' transition:fade d={linePath}></path>\n    {/if}\n{/if}\n\n<style>\n    .path-line {\n        fill: none;\n        stroke-width: 3px;\n        stroke: #ccc;\n        fill-opacity: 0.25;\n    }\n\n    .full {\n        fill: #999;\n        stroke: #999;\n        stroke-dasharray: 5px;\n    }\n    .filtered {\n        fill: #574CFA;\n        stroke: #574CFA;\n\n    }</style>",
    "<script>\n    import copy from \"../data/copy.json\";\n    </script>\n    \n    <section class='methods'>\n        <div class='container'>\n            <h2 class='methods'>Methods</h2>\n            {#each copy.methods as {type, value}}\n                <p class='prose'>{@html value}</p>\n            {/each}\n        </div>\n\n    \n    </section>\n    \n    <style>\n    section {\n        background-color: var(--fg);\n        color: var(--bg);\n        padding: 1rem 2rem;\n    }\n    .container {\n        max-width: 50rem;\n        margin: 0 auto;\n    }\n\n\n    p {\n        color: var(--bg);\n        font-size: 14px;\n        font-family: 'National 2 Web'\n    }</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data, x, xGet, xScale } = getContext('LayerCake');\n</script>   \n\n\n        {#each $data as d, i}\n        <div class='container'>\n            <p class='category'>{d.category}</p>\n            <div class='bar' style=\"width:{$xGet(d)}px; background-color:{d.hex}\"></div> \n            <p class='percent'>{d.percent}%</p>\n        </div>\n        \n        {/each}\n\n\n<style>\n \n    .container {\n        display: flex; \n        flex-direction: row;\n        align-items: center;\n        position: relative;\n    }\n\n    .bar {\n        height: 1em;\n        margin: 0 0.4em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    .category {\n        width: 30%;\n        min-width: 30%;\n        text-align: right;\n    }\n\n    .percent {\n        font-size: small;\n        color: gray;\n    }</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data, x, xGet, xScale } = getContext('LayerCake');\n</script>   \n\n\n        <div class='container'>\n            <p class='category'>{$data.category}</p>\n            {#each $data.values as d}\n            <div class='bar-container'>\n                \n                    <div class='bar' style=\"width:{$xGet(d)}px; background-color:{d.hex}\"></div> \n                    <p class='percent'>{d.percent}%</p>\n                \n            </div>\n{/each}\n\n        </div> \n    \n \n\n\n<style>\n\n    .container {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .bar-container {\n        display: flex; \n        flex-direction: row;\n        align-items: center;\n        position: relative;\n    }\n\n    .bar {\n        height: 1em;\n        margin: 0 0.4em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    .category {\n        width: 30%;\n        min-width: 30%;\n        text-align: left;\n        text-transform: uppercase;\n        margin: 0.2em 0.4em;\n    }\n\n    .percent {\n        font-size: small;\n        color: gray;\n    }</style>",
    "<script>\n    import copy from \"../data/copy.json\";\n    import NudeElement from \"./NudeElement.svelte\";\n    import Switch from \"./Switch.svelte\"\n    import 'intersection-observer'\n    import scrollama from 'scrollama'\n    import SectionHed from \"./SectionHed.svelte\"\n\n\n    export let state = \"on\";\n    let activeStep = \"all\";\n    let steps;\n\n    let scroller = scrollama();\n\n\n    $: if (steps && state === 'on'){\n        scroller\n            .setup({\n                step: \".step\"\n            })\n            .onStepEnter((response) => {\n                const { element } = response\n                activeStep = element.dataset.step\n            })\n        \n    }\n\n\n</script>\n\n<section>\n        <SectionHed text={'Nude and Natural'} />\n\n\n        {#each copy.nude as {type, value}}\n            <p class='prose'>{@html value}</p>\n        {/each}\n\n        <div class='warning'>\n            <p class='warning-prose'>The next graphics in this story will utilize scroll-driven animations. Use this toggle to disable this and view static graphics instead.</p>\n            <Switch label=\"Animations are \" design=\"inner\" bind:value={state} />\n        </div>\n\n\n\n{#if state === \"on\"}\n    <div class='scroll'>\n        <div class='element element-scroll'>\n            <NudeElement step = {activeStep} />\n        </div>\n            <div class='step-container' bind:this={steps}>\n            {#each copy.steps as step, i (step)}\n                <div class='step' data-step={step.step}>\n                    <p class='prose'>{@html step.text}</p>\n                </div>\n            {/each}\n        </div>\n\n\n    </div>\n\n{:else}\n    <div class='standard'>\n        {#each copy.steps as step, i (step)}\n        <div class='standard-group'>\n            <p class='prose'>{@html step.text}</p>\n            <div class='element element-standard'>\n                <NudeElement step = {step.step} />\n            </div>\n        </div>\n    {/each}\n    </div>\n\n{/if}\n\n\n{#each copy.postNude as {type, value}}\n    <p class='prose'>{@html value}</p>\n{/each}\n\n</section>\n\n<style>\n    .scroll, .standard-group {\n        display: flex;\n        flex-direction: row-reverse;\n    }\n\n    .scroll {\n        position: relative;\n        margin-top: 6rem;\n    }\n\n    .standard-group {\n        flex-direction: column;\n        margin-top: 5rem;\n    }\n\n\n    .step-container {\n        width: 50vw;\n    }\n\n    .step {\n        height: 95vh;\n        max-width: 300px;\n        margin: 0 auto;\n    }\n\n    .step p {\n        background-color: transparent;\n        border: 1px solid var(--off-black);\n        padding: 1rem 1.5rem;\n        box-shadow: 12px -12px 0 -1px var(--white), 12px -12px 0 0 #000;\n    }\n\n    .element-scroll {\n        width: 50%;\n        min-width: 50%;\n        margin-left: 4rem;        \n        position: -webkit-sticky;        \n        position: sticky;\n        height: 70vh;\n        top: 25vh;\n    }\n\n    .element-standard {\n        height: 50vh;\n    }\n\n    @media screen and (max-width: 500px) {\n        .scroll {\n            display: block;\n            position: relative;\n            padding: 1rem;\n        }\n        .step-container {\n            width: 95%;\n            margin: 0 auto;\n            position: relative;\n        }\n\n        .step {\n            height: 110vh;\n        }\n        .step p {\n            background-color: var(--bg);\n        }\n        .element-scroll {\n            width: 100%;\n            height: 90vh;\n            top: 5vh;\n            position: -webkit-sticky;\n            position: sticky;\n            left: 0;\n            margin: 0;\n            transform: translate3d(0, 0, 0);\n            z-index: 0;\n        }\n    }\n\n    .standard {\n        max-width: 50rem;\n        margin: 0 auto;\n    }\n\n    .warning {\n        max-width: 40rem;\n        padding: 1rem;\n        background-color: #F1F0FF;\n        margin: 2rem auto;\n        border: 1px solid var(--accent-color);\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        border-radius: 5px;\n        flex-wrap: wrap;\n    }\n\n    .warning-prose{\n        margin: 0;\n        max-width: 400px;\n    }</style>",
    "<script>\n    import {ascending} from 'd3-array'\n    export let data;\n\n    $: values = data[1].sort((a, b) => ascending(+a.numbers, +b.numbers))\n    $: labelValues = [0, Math.ceil((values.length - 1) / 2), values.length - 1]\n    $: brand = values[0].brand\n    $: product = values[0].product\n    $: lightToDark = values[0].lightToDark === 'TRUE' ? 'lightest to darkest' : 'darkest to lightest' \n</script>\n\n<figure >\n    <div class='container'>\n        <p class='brand' aria-hidden=\"true\">{brand}</p>\n        <p class='sub' aria-hidden=\"true\">{product}</p>\n        <div class='swatch-container' role = 'img' aria-label=\"Colored stripes of {brand}'s {product} sequentially numbered foundation where {values.length} shades go from {lightToDark}\">\n            {#each values as swatch, i}\n            <div class='single-swatch'>\n                <div class='swatch' style=\"background-color:{swatch.hex}\"></div>\n                {#if labelValues.includes(+i)}\n                    <div class='line-label'></div>\n                    <p class='swatch-label'>{swatch.specific}</p>\n                {/if}\n            </div>\n            {/each}\n        </div>\n\n    </div>\n    \n</figure>\n\n<style>\n    figure {\n        flex: 1 1 0;\n    }\n\n    .brand {\n        font-weight: bold;\n        margin-bottom: 0.25rem;\n    }\n    .sub {\n        color: var(--gray);\n        margin-top: 0;\n        font-size: 14px;\n    }\n    .container {\n        margin-bottom: 3rem;\n        flex: 1 1 0px;\n    }\n    .swatch-container {\n        display: flex;\n        position: relative;\n    }\n    .single-swatch{\n        margin-right: 3px;\n        overflow: auto;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .swatch {\n        width: 4px;\n        min-width: 4px;\n        height: 20px;\n        border-radius: 3px;\n    }\n    .swatch-label {\n        position: absolute;\n        text-align: center;\n        font-size: 12px;\n        color: var(--gray);\n        margin: 0;\n        top: 25px;\n    }\n    .line-label {\n        width: 1px;\n        height: 5px;\n        margin-top: 2px;\n        background-color: var(--gray);\n        align-self: center;\n    }</style>",
    "<script>\n    import NumberDistribution from \"./NumberDistribution.svelte\"\n    import data from \"../data/numbers_export.csv\"\n    import copy from \"../data/copy.json\";\n    import { groups } from 'd3-array'\n\n    const baselineIDs = [94, 13, 17, 104]\n\n    $: baseline = groups(data.filter(d => baselineIDs.includes(+d.id)), d => d.id)\n    $: darkToLight = groups(data.filter(d => d.lightToDark === 'FALSE'), d => d.id)\n</script>\n\n<section id='numbers'>   \n     <div class='container'>\n        {#each baseline as product}\n            <NumberDistribution data={product} />\n        {/each}\n    </div>\n\n    {#each copy.darkToLight as {value}}\n    <p class='prose'>{@html value}</p>\n    {/each}\n\n    <div class='container'>\n        {#each darkToLight as product}\n            <NumberDistribution data={product} />\n        {/each}\n    </div>\n\n    {#each copy.wrapNumbers as {value}}\n    <p class='prose'>{@html value}</p>\n    {/each}\n\n</section>\n\n<style>\n    section {\n        max-width: 50rem;\n        margin: 0 auto;\n    }\n\n    .container {\n        display: flex;\n        flex-wrap: wrap;\n        padding: 1rem;\n    }</style>",
    "<script>\n    // based on suggestions from:\n    // Sami Keijonen https://webdesign.tutsplus.com/tutorials/how-to-make-custom-accessible-checkboxes-and-radio-buttons--cms-32074\n    // and Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n  \n    export let options;\n    export let legend;\n    export let value = options[0].name;\n    export let id;\n  \n    const slugify = (str = \"\") =>\n      str.toLowerCase().replace(/ /g, \"-\").replace(/\\./g, \"\");\n  </script>\n  \n\n  <fieldset id={`field-${id}`}>\n    <legend>{legend}</legend>\n    {#each options as { name, label } (name)}\n      <input\n        class=\"sr-only\"\n        type=\"radio\"\n        id={`${id}-${slugify(name)}`}\n        bind:group={value}\n        value={slugify(name)} />\n      <label class='option' for={`${id}-${slugify(name)}`}> {label} </label>\n    {/each}\n  </fieldset>\n\n  \n  <style>\n    fieldset {\n      border-radius: 2px;\n      border: 1px solid var(--gray-darker);\n    }\n  \n    label {\n      -webkit-user-select: none;\n         -moz-user-select: none;\n          -ms-user-select: none;\n              user-select: none;\n      line-height: 1.2em;\n      display: inline;\n      font-weight: 400;\n      color: var(--gray);\n    }\n  \n    .sr-only {\n      position: absolute;\n      clip: rect(1px, 1px, 1px, 1px);\n      padding: 0;\n      border: 0;\n      height: 1px;\n      width: 1px;\n      overflow: hidden;\n    }\n  \n    input[type=\"radio\"] {\n      position: absolute;\n    }\n  \n    input[type=\"radio\"] + label {\n      position: relative;\n    }\n\n    .option {\n        padding: 0.6em 1em;\n        line-height: 1.3em;\n        -webkit-appearance: none;\n           -moz-appearance: none;\n                appearance: none;\n        background: none;\n        font-weight: 600;\n        font-size: 0.9em;\n        color: var(--accent-color);\n        border: 1px solid var(--accent-color);\n        border-radius: 0;\n        outline: none;\n        cursor: pointer;\n    }\n    .option + .option {\n        border-left-width: 0;\n    }\n    .option:first-of-type {\n        border-radius: 6px 0 0 6px;\n    }\n    .option:last-of-type {\n        border-radius: 0 6px 6px 0;\n    }\n  \n  \n    input[type=\"radio\"]:checked + label {\n        background: var(--accent-color);\n        color: white;\n    }\n  \n    input[type=\"radio\"]:focus + label {\n        box-shadow: 0 0px 8px var(--accent-color);\n    }  \n    \n    input[type=\"radio\"]:disabled + label {\n      color: darken(var(--gray), 10);\n    }\n  \n    input[type=\"radio\"]:disabled + label {\n      background: var(--gray);\n    }</style>",
    "<script>\nexport let text;\n</script>\n\n<div class='divider-text'>\n    <h2 class='section-hed'>{text}</h2>\n</div>\n\n<style>\n    .divider-text {\n        margin-top: 4rem;\n    }</style>",
    "<script>\n    // based on suggestions from:\n    // Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n    // On Designing and Building Toggle Switches by Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    // and this example by Scott O'hara https://codepen.io/scottohara/pen/zLZwNv \n\n    export let id = `switch-${Math.random()}`\n    export let label;\n    export let design = 'inner label'\n    export let options = [];\n\n    let checked = true;\n    export let value = 'on';\n\n    function handleClick(event){\n        const target = event.target\n\n        const state = target.getAttribute('aria-checked')\n\n        checked = state === 'true' ? false : true\n\n        value = checked === true ? 'on' : 'off'\n    }\n\n</script>\n\n{#if design == 'inner'}\n<div class=\"s s--inner\">\n    <span {id}>{label}</span>\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={id}\n        on:click={handleClick}>\n            <span>on</span>\n            <span>off</span>\n    </button>\n</div>\n{:else if design == 'slider'}\n<div class=\"s s--slider\">\n    <span {id}>{label}</span>\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={id}\n        on:click={handleClick}>\n    </button>\n</div>\n{:else}\n<div class=\"s s--multi\">\n    <fieldset>\n    <legend>{label}</legend>\n        {#each options as option, i}\n            <input type=\"radio\" id={`switch-${id}-${i}`} name=\"option\" value={option} bind:group={value}>\n            <label for={`switch-${id}-${i}`}>\n                {option}\n            </label> \n        {/each}\n    </fieldset>\n</div>\n\n\n{/if}\n\n<style>\n    /* .s {\n        --accent-color: cornflowerblue;\n\n    } */\n    /* Inner Design Option */\n    .s--inner button {\n        padding: 0.5em;\n        background-color: #fff;\n        /* border: 1px solid var(--gray); */\n    }\n    [role='switch'][aria-checked='true'] :first-child,\n    [role='switch'][aria-checked='false'] :last-child {\n        background: var(--accent-color);\n        color: #fff;\n        border-radius: 0.25em;\n    }\n\n    .s--inner button span {\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        pointer-events:none;\n        padding: 0.25em;\n    }\n\n    .s--inner span {\n        color: var(--accent-color)\n    }\n\n    .s--inner button:focus {\n        outline: var(--accent-color) solid 1px;\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 0.1em;\n    }\n\n    /* Slider Design Option */\n\n    .s--slider {\n        display: flex;\n        align-items: center;\n    }\n\n    .s--slider button {\n        width: 3em;\n        height: 1.6em;\n        border-radius: 1.5em;\n        position: relative;\n        margin: 0 0 0 0.5em;\n        background: var(--gray);\n        border: none;\n    }\n\n    .s--slider button::before {\n        content: '';\n        position: absolute;\n        width: 1.25em;\n        height: 1.25em;\n        background: #fff;\n        top: 0.2em;\n        right: 1.6em;\n        border-radius: 100%;\n        transition: transform 0.3s;\n    }\n\n    .s--slider button[aria-checked='true']{\n        background-color: var(--accent-color)\n    }\n\n    .s--slider button[aria-checked='true']::before{\n        transform: translateX(1.4em);\n        transition: transform 0.3s;\n    }\n\n    .s--slider button:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n    .s--slider span {\n        font-weight: bold;\n    }\n\n    /* Multi Design Option */\n\n    /* Based on suggestions from Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    and this example from Scott O'hara https://codepen.io/scottohara/pen/zLZwNv */\n\n    .s--multi fieldset {\n        border: none;\n        padding: 0;\n        white-space: nowrap;\n    }\n\n    /* .s--multi legend {\n    font-size: 2px;\n    opacity: 0;\n    position: absolute;\n    } */\n\n    .s--multi label {\n        display: inline-block;\n        line-height: 1.6;\n        position: relative;\n        z-index: 2;\n    }\n\n    .s--multi input {\n        opacity: 0;\n        position: absolute;\n    }\n\n    .s--multi label:first-of-type {\n        padding-right: 5em;\n    }\n\n    .s--multi label:last-child {\n        margin-left: -5em;\n        padding-left: 5em;\n    }\n\n    .s--multi:focus-within label:first-of-type:after {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n\n\n    /* making the switch UI.  */\n    .s--multi label:first-of-type:before,\n    .s--multi label:first-of-type:after {\n        content: \"\";\n        height: 1.25em;\n        overflow: hidden;\n        pointer-events: none;\n        position: absolute;\n        vertical-align: middle;\n    }\n\n    .s--multi label:first-of-type:before {\n        border-radius: 100%;\n        z-index: 2;\n        position: absolute;\n        width: 1.25em;\n        height: 1.25em;\n        background: #fff;\n        top: 0.175em;\n        right: 1.2em;\n        transition: transform 0.3s;\n    }\n\n    .s--multi label:first-of-type:after {\n        background: var(--accent-color);\n        border-radius: 1em;\n        margin: 0 1em;\n        transition: background .2s ease-in-out;\n        width: 3em;\n        height: 1.6em;\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:after {\n        background: var(--gray);\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:before {\n        transform: translateX(-1.4em);\n    }\n\n    .s--multi input:last-of-type:checked ~ label:last-of-type {\n        z-index: 1;\n    }\n\n    .s--multi input:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }</style>",
    "<script>\n    import Icon from \"./helpers/Icon.svelte\"\n    import { ascending, descending } from 'd3-array'\n\n    export let headers;\n    export let rows;\n    export let perPage;\n\n    $: totalRows = rows.length - 1\n    $: currentPage = 0\n    $: totalPages = Math.ceil(totalRows / perPage)\n    $: start =  currentPage * perPage + 1\n    $: end = currentPage === totalPages - 1 ? totalRows : start + perPage - 1;\n\n    $: sortStatus = [];\n    $: sortDirection = 'ascending'\n\n    function updateSortStatus(column, index){\n        // reset all to \"none\"\n        headers.forEach(d => {\n            sortStatus[d] = \"none\"\n        })\n\n        sortDirection === 'ascending' ? sortDirection = 'descending' : sortDirection = 'ascending'\n        sortStatus[column] = sortDirection\n    }\n\n    $: sortIcons = {'none' : {\n        direction: 'e',\n        icon: 'code'\n    }, 'ascending' : {\n        direction: 'n',\n        icon: 'chevron-up'\n    }, 'descending' : {\n        direction: 'n',\n        icon: 'chevron-down'\n    }}\n\n    $: headers.forEach(d => {\n        sortStatus[d] = \"none\"\n    })\n\n    $: sortBy = 'none'\n\n    $: sortedRows = rows\n\n    $: if (sortBy !== 'none' && sortBy !== 4){\n        if (sortDirection === 'ascending') sortedRows = rows.sort((a, b) => ascending(a[sortBy].toLowerCase(), b[sortBy].toLowerCase())) \n        else sortedRows = rows.sort((a, b) => descending(a[sortBy].toLowerCase(), b[sortBy].toLowerCase()) ) \n    }\n\n    $: if (sortBy === 4){\n        if (sortDirection === 'ascending') sortedRows = rows.sort((a, b) => ascending(a[sortBy], b[sortBy])) \n        else sortedRows = rows.sort((a, b) => descending(a[sortBy], b[sortBy]) ) \n    }\n\n    $: trimmedRows = sortedRows.slice(start, end + 1)\n\n    $: totalRows, currentPage = 0\n    $: currentPage, start, end\n\n\n\n</script>\n\n<div>\n    <table>\n    <tbody>\n        <tr>\n            {#each headers as header, i (header)}\n                <th aria-sort={sortStatus[header]}>\n                    {header}\n                    <button class={i === sortBy ? 'sort selected' : 'sort'} \n                        on:click=\"{() => {\n                            sortBy = i\n                            updateSortStatus(header, i)\n                        }}\"\n                    >\n                        <Icon name={sortIcons[sortStatus[header]].icon} direction={sortIcons[sortStatus[header]].direction}\n                            stroke = {i === sortBy ? 'white' : 'gray'} />\n                    </button>\n                </th>\n            {/each}\n        </tr>\n\n        {#each trimmedRows as row (row)}\n            <tr>\n                {#each row as column}\n                    <td>{column}</td>\n                {/each}\n            </tr>\n        {/each}\n    </tbody>\n</table>\n    {#if totalRows > perPage}\n        <div class='pagination'>\n            <button on:click={() => currentPage -= 1} \n                disabled={currentPage === 0 ? true : false} \n                aria-label=\"left arrow icon\" \n                aria-describedby=\"prev\">\n                    <Icon name = 'chevron-left' />\n            </button>\n            <span id='prev' class='sr-only'>Load previous {perPage} rows</span>\n            <p>{start} - {end} of {totalRows}</p>\n            <button on:click={() => currentPage += 1} \n                disabled={currentPage === totalPages - 1 ? true : false} \n                aria-label=\"right arrow icon\" \n                aria-describedby=\"next\">\n                <Icon name = 'chevron-right' />\n            </button>\n            <span id='next' class='sr-only'>Load next {perPage} rows</span>\n        </div>\n    {/if}\n</div>\n\n\n<style>\n    .sr-only {\n      position: absolute;\n      clip: rect(1px, 1px, 1px, 1px);\n      padding: 0;\n      border: 0;\n      height: 1px;\n      width: 1px;\n      overflow: hidden;\n    }\n    \n    .pagination {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        pointer-events: all;\n    }\n\n    .pagination p {\n        margin: 0 1rem;\n    }\n\n    td {\n        white-space: nowrap;\n        overflow: hidden;\n    }\n\n    table {\n        pointer-events: all;\n    }\n\n    .selected {\n        background-color: var(--accent-color)\n    }</style>",
    "<script>\n    import {quadtree} from 'd3-quadtree';\n    import { getContext } from 'svelte';\n    import TooltipDisplay from './TooltipDisplay.svelte'\n\n\n    export let blockDimensions;\n    let found = {};\n\n    $: ({blockWidth, blockHeight, blockPadding} = blockDimensions);\n\n    const { data, xGet, yGet, width, xScale, height} = getContext('LayerCake')\n\n    $: formattedData = $data.map(d => ({\n        ...d,\n        x: $xScale(d.binStart) + blockWidth,\n        y: $height - ((d.index + 1) * (blockHeight + blockPadding))\n    }))\n\n\n    function findItem(mousePos){\n        found = finder.find(mousePos.layerX, mousePos.layerY)\n    }\n\n\n    $: finder = quadtree()\n        .extent([[-1, -1], [$width + 1, $height + 1]])\n        .x(d => d.x)\n        .y(d => d.y)\n        .addAll(formattedData)\n</script>\n\n<div class='bg' on:mousemove={findItem} on:mouseleave={() => found = {}}></div>\n\n{#if Object.keys(found).length > 0}\n    <TooltipDisplay selected={found} width={$width} {blockDimensions} height={$height} xScale={$xScale} />\n{/if}\n\n<style>\n    .bg {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        pointer-events: all;\n    }</style>\n",
    "<script>\n    export let selected;\n\n    export let blockDimensions;\n    export let width;\n    export let height;\n    export let xScale;\n    $: ({blockWidth, blockHeight, blockPadding} = blockDimensions);\n    let w = 250;\n    $: h = w * 2 ;\n\n    // if too far right, flip to other side\n    $: startXPos = xScale(selected.binStart) + blockWidth + (blockPadding * 2)\n    $: left = width - startXPos < w ? startXPos - blockWidth - w - (blockPadding * 2) : startXPos\n\n    $: startYPos = height - ((selected.index + 1) * (blockHeight + blockPadding)) - (blockPadding)\n    $: top = height - startYPos < w ? startYPos - 100: startYPos\n\n\n\n\n</script>\n\n<div class='tooltip' style=\"width:{w}px;\n    top: {top}px;\n    left: {left}px\n\">  <p class='name'>\"{selected.name}\"</p>\n    <p class='brand'>{selected.brand}</p>\n    <p class='product'>{selected.product}</p>\n\n</div>\n\n<div class='highlight' style=\"width:{blockWidth + (blockPadding * 2)}px; \n    height: {blockHeight + (blockPadding * 2)}px; \n    top:{height - ((selected.index + 1) * (blockHeight + blockPadding)) - (blockPadding)}px;\n    left: {xScale(selected.binStart)}px\">\n\n</div>\n\n<style>\n    .tooltip {\n        position: absolute;\n        background-color: var(--white);\n        padding: 0.5rem 1rem;\n        border: 1px solid var(--gray);\n        pointer-events: none;\n    }\n\n    .tooltip p {\n        margin: 0.5rem 0;\n    }\n\n    .brand, .product{\n        font-size: 14px;\n    }\n\n    .name {\n        font-weight: bold;\n        font-size: 18px;\n        text-align: center;\n    }\n    .highlight {\n        border: 3px solid var(--accent-color);\n        position: absolute;\n        box-shadow: 0 0px 8px var(--accent-color);\n    }</style>\n",
    "<script>\n    import Checkbox from \"./Checkbox.svelte\"\n    import Radio from \"./Radio.svelte\"\n\n    export let UIOptions = [];\n    export let id;\n\n    export let brandSel;\n    export let categorySel;\n    export let radioValue = 'swatches';\n    export let checkValue;\n    export let allBrands;\n    export let allCategories;\n\n\n\n</script>\n\n<div class='ui-elements'>\n\n\n    <form >\n        {#if UIOptions.includes('dropdown')}\n            <fieldset class='select-group'>\n                <div>\n                    <label for=\"brandSelect\">Filter by brand</label>\n                    <select id=\"brandSelect\" \n                        bind:value={brandSel}>\n                        {#each allBrands as brand}\n                            <option>{brand}</option>\n                        {/each}\n                    </select>\n                </div>\n                <div>\n                    <label for=\"categorySelect\">Filter by category</label>\n                    <select id=\"categorySelect\" bind:value={categorySel}>\n                        {#each allCategories as category}\n                            <option>{category}</option>\n                        {/each}\n                    </select>\n                </div>\n            </fieldset>\n        {/if}    \n \n\n        {#if UIOptions.includes('radio')}\n                <Radio bind:value={radioValue}\n                    options={[\n                    {name: 'swatches', label: 'swatches'},\n                    {name: 'names', label: 'names'},\n                    {name: 'table', label: 'table'}\n                    ]}\n                legend=\"Show Me\" {id} />\n        {/if}        \n        {#if radioValue === 'swatches'}\n            <Checkbox bind:value={checkValue} {id} checks = {[{name: 'all', label: 'Compare to all shades', selected: 'false'}]} />\n        {/if}\n    </form>\n           \n\n</div>\n\n\n<style>\n    .ui-elements {\n        pointer-events: all;\n    }\n\n    .select-group {\n        display: flex;\n    }\n\n    .select-group div {\n        flex: 1 1 0;\n        width: 50%;\n    }\n\n    .select-group div select {\n        width: 90%;\n    }\n\n    .select-group label {\n        text-transform: uppercase;\n        color: var(--gray);\n    }\n\n    fieldset {\n        border: none;\n    }</style>",
    "<script>\n  import { onMount } from \"svelte\";\n  import { LayerCake, Svg } from \"layercake\";\n  import Scatter from \"./Scatter.svelte\";\n  import Icon from \"../helpers/Icon.svelte\";\n  import sampleData from \"../../data/demo/sample.csv\";\n  import copyData from \"../../data/demo/copy.json\";\n\n  const points = [\n    { x: 0, y: 1 },\n    { x: 10, y: 5 },\n    { x: 15, y: 10 },\n  ];\n  const r = 6;\n  const padding = { top: r * 2, right: r * 2, bottom: r * 2, left: r * 2 };\n</script>\n\n<section id=\"demo\">\n  <!-- copy from google doc -->\n  <div>\n    <h1>{copyData.headline}</h1>\n  </div>\n\n  <div>\n    <p>\n      Hello svelter! Here is an inline svg icon:\n      <!-- icon from tabler (see styling in global.css -->\n      <!-- {@html moodSmile} -->\n      <Icon name=\"feather\" />\n    </p>\n  </div>\n\n  <div>\n    <p>A table from CSV data</p>\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- data from csv -->\n        {#each sampleData as { name, value }}\n          <tr>\n            <td>{name}</td>\n            <td>{value}</td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n\n  <div>\n    <p>An image from \"public/assets\"</p>\n    <!-- image from public/assets -->\n    <img alt=\"sad toast\" src=\"assets/toast.png\" />\n  </div>\n\n  <div>\n    <p>A chart using Layercake</p>\n    <!-- chart using Layercake -->\n    <figure>\n      <LayerCake data=\"{points}\" x=\"x\" y=\"y\" padding=\"{padding}\">\n        <Svg>\n          <Scatter r=\"{r}\" />\n        </Svg>\n      </LayerCake>\n    </figure>\n    <div>\n      <h1>Heading 1</h1>\n      <h2>Heading 2</h2>\n      <h3>Heading 3</h3>\n      <h4>Heading 4</h4>\n      <h5>Heading 5</h5>\n      <h6>Heading 6</h6>\n      <p>\n        This is a paragraph with a\n        <strong>strong</strong>\n        tag and an\n        <em>em</em>\n        tag. And here is a\n        <mark>mark</mark>\n        tag. Oh and a\n        <a href=\"#demo\">link</a>\n        tag.\n      </p>\n    </div>\n\n    <div>\n      <p>Some Elements:</p>\n      <p><button>Button</button></p>\n      <p>\n        <select>\n          <option>Select</option>\n          <option>Thing 1</option>\n          <option>Thing 2</option>\n        </select>\n      </p>\n      <p><input placeholder=\"input\" /></p>\n      <p><input type=\"range\" /></p>\n    </div>\n  </div>\n</section>\n\n<style>\n  section {\n    padding: 1rem;\n  }\n\n  div {\n    margin-bottom: 2rem;\n  }\n\n  img {\n    width: 20rem;\n  }\n\n  figure {\n    position: relative;\n    width: 20rem;\n    height: 20rem;\n  }\n\n  td:nth-child(2),\n  th:nth-child(2) {\n    text-align: right;\n    padding: 0.5em;\n  }</style>\n",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg {...icon.attrs} style=\"{`transform: rotate(${rotation}deg);`}\">\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n\n  const v = Date.now();\n  const url = `https://pudding.cool/assets/data/stories.json?v=${v}`;\n\n  let localURL;\n\n  const links = [\n    { name: \"about\", url: \"https://pudding.cool/about\" },\n    { name: \"facebook\", url: \"https://facebook.com/pudding.viz/\" },\n    { name: \"twitter\", url: \"https://twitter.com/puddingviz/\" },\n    {\n      name: \"instagram\",\n      url: \"https://www.instagram.com/the.pudding\",\n    },\n    { name: \"patreon\", url: \"https://patreon.com/thepudding/\" },\n    { name: \"privacy\", url: \"https://pudding.cool/privacy/\" },\n    { name: \"newsletter\", url: \"http://eepurl.com/czym6f\" },\n    { name: \"rss\", url: \"https://pudding.cool/feed/index.xml\" },\n  ];\n\n  onMount(() => {\n    localURL = window.location.href;\n  });\n\n  const fetchData = (async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const stories = data.filter((d) => d.url !== localURL).slice(0, 4);\n    return stories;\n  })();\n</script>\n\n<footer>\n  <section class=\"stories\">\n    {#await fetchData then data}\n      {#each data as { hed, url, image }}\n        <div class=\"story\">\n          <a href=\"https://pudding.cool/{url}\">\n            <img\n              src=\"https://pudding.cool/common/assets/thumbnails/640/{image}.jpg\"\n              alt=\"{hed}\" />\n            <span>{hed}</span>\n          </a>\n        </div>\n      {/each}\n    {/await}\n  </section>\n\n  <section class=\"about\">\n    <div class=\"wordmark\">\n      {@html wordmark}\n    </div>\n    <p>\n      <a href=\"https://pudding.cool\">The Pudding</a>\n      is a digital publication that explains ideas debated in culture with\n      visual essays.\n    </p>\n  </section>\n\n  <section class=\"links\">\n    <ul>\n      {#each links as link}\n        <li>\n          <a href=\"{link.url}\">\n            <!-- TODO icon -->\n            <span>{link.name.toUpperCase()}</span>\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </section>\n</footer>\n\n<style>\n  footer {\n    background-color: var(--text-main);\n    color: var(--background-body);\n    font-family: var(--sans);\n    padding: 3em 1em;\n    border-top: 1px solid var(--bg);\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: var(--background-body);\n  }\n\n  .stories {\n    margin: 0 auto;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    max-width: 70em;\n  }\n\n  .story {\n    display: block;\n    width: 100%;\n    border: none;\n    margin-bottom: 3rem;\n  }\n\n  .story a {\n    display: block;\n    font-weight: 700;\n    text-decoration: none;\n  }\n\n  .story span {\n    display: block;\n    margin-top: 1em;\n    line-height: 1.2;\n  }\n\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .about {\n    margin: 3rem auto;\n    margin-top: 0;\n    text-align: center;\n  }\n\n  .links ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .links li {\n    display: flex;\n    padding: 0.5em 1em;\n  }\n\n  .links a {\n    display: flex;\n    border: none;\n    align-items: center;\n    text-decoration: none;\n  }\n\n  .links span {\n    margin-left: 0.5em;\n  }\n\n  @media only screen and (min-width: 30em) {\n    .story {\n      width: 50%;\n      padding: 0 1em;\n    }\n  }\n\n  @media only screen and (min-width: 50em) {\n    .story {\n      width: 25%;\n      padding: 0 1em;\n    }\n  }</style>\n",
    "<script>\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n  import Switch from \"../Switch.svelte\"\n\n  // export let state;\n</script>\n\n<header>\n  <!-- <Switch label=\"Scrollytelling\" design=\"slider\" bind:value={state} /> -->\n  <div class=\"wordmark\">\n    <a href=\"https://pudding.cool\">{@html wordmark}</a>\n  </div>\n</header>\n\n<style>\n  header {\n    background-color: var(--off-black);\n    top: 0;\n    padding: 0.25em 0;\n  }\n  .wordmark {\n    max-width: 10em;\n    margin: 0 auto;\n  }\n\n  .wordmark a {\n    border: none;\n    color: var(--bg);\n  }\n\n  .wordmark a:hover {\n    background-color: transparent;\n  }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}