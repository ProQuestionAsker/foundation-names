{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "Column.svelte",
    "Distribution.svelte",
    "Food.svelte",
    "Graphs.svelte",
    "Histogram.svelte",
    "Intro.svelte",
    "Mini.svelte",
    "MiniCat.svelte",
    "Nude.svelte",
    "NudeElement.svelte",
    "Switch.svelte",
    "Demo.svelte",
    "Icon.svelte",
    "Footer.svelte",
    "Header.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}</style>\n",
    "<script>\n    export let group;\n\n</script>\n\n<div class='histogram__column'>\n    {#each group as d, i}\n        <p class='shade' style=\"color:{d[1][0].hex}\" >{d[0]}</p>\n    {/each}\n</div>\n\n<style>\n    .histogram__column {\n        width: 10em;\n        margin-right: 0.5em;\n    }\n\n    .shade {\n        margin: 0.05em 0;\n    }</style>",
    "<script>\n    import data from \"../data/shades_export.csv\"\n    import { LayerCake, flatten } from \"layercake\";\n    import Mini from './Mini.svelte'\n    import { extent, range, bin, groups, ascending, rollups } from 'd3-array'\n    import SmallMultContainer from \"./SmallMultContainer.svelte\"\n\n    let maxCol = 10;\n\n    $: console.log({data})\n\n\n    // figure out which bin each shade goes in\n    $: lightBin = bin().thresholds(maxCol).domain([0, 1]).value(d => d.lightness)\n\n    function findPercent(group){\n       return group[1].map(g => ({\n           ...g,\n           percent: g.length / group[0].length\n       }))\n    }\n\n    let condensedData = []\n    $: lightBin(data.filter(d => d.category !== 'NA')).forEach((bin, i) => {\n            if (bin.length > 0){\n                const sorted = bin.sort((a,b) => ascending(a.category, b.category))\n                const roll = rollups(sorted, v => v.length, d => d.category).map(d => ({\n                    category: d[0],\n                    count: d[1],\n                    percent: Math.round(d[1] / sorted.length * 100),\n                    hex: sorted[0].hex, \n                    group: i\n                }))\n \n                condensedData.push(roll) \n            } else condensedData.push([])\n        })\n\n\n    $: flatterData = flatten(condensedData)\n \n    $: flatData = flatten(flatterData)\n\n    $: categories = groups(flatData, d => d.category)\n    $: catData = [];\n\n\n    $: categories.forEach(cat => {\n            const filledIn = range(0, 10).map(i => {\n                const val = cat[1]\n                const matched = val.filter(d => d.group === i + 1)\n                return matched.length === 0 ? { group: i + 1, percent: 0} : matched[0];\n            })\n            catData.push({category: cat[0], values: filledIn})\n        })\n            \n\n\n</script>\n\n<section>\n    <p>I found approximately 9 naming categories used. The most common (not shown but used for 24% of shade names) is to just use a number or letter system. Of the naming systems that use words, these are the categories:</p>\n<ul>\n    <li><strong>Color</strong>: Using a word that is known to refer to a specific color (e.g., \"brown\", \"beige\", \"yellow\" etc.)</li>\n    <li><strong>Descriptor</strong>: These are words used alone that typically act as adjectives (e.g., \"light\", \"dark\" etc.)</li>\n    <li><strong>Drink</strong>: Colors that refer to beverages or other liquids (e.g., \"espresso\", \"rum\", \"tea\", \"milk\" etc.)</li>\n    <li><strong>Food</strong>: Colors that refer to foods (e.g., \"custard\", \"praline\", \"truffle\" etc.)</li>\n    <li><strong>Rock</strong>: Colors that refer to rocks, gemstones, or other geological or natural structures (e.g., \"sand\", \"ivory\", \"amber\", \"alabaster\" etc.)</li>\n    <li><strong>Skin</strong>: These are words that are often used as synonyms for skin or nudity (e.g., \"nude\", \"natural\", \"tan\" etc.)</li>\n    <li><strong>Wood</strong>: These are words that are most commonly used in reference to wood or other plants (e.g., \"mahogany\", \"hazel\", \"oak\" etc.)</li>\n    <li><strong>Misc.</strong>: These are words that didn't seem to fall into any other category (e.g., \"copper\", \"dusk\", \"unstoppable\", \"suede\" etc.</li>\n</ul>\n\n\n\n<div class='chart-container'>\n    <h2>Naming Category Distribution by Foundation Shade</h2>\n    {#each condensedData as data}\n        <div class='mini-container'>\n            <SmallMultContainer {data} type = \"byShade\"/>\n        </div>\n    {/each}\n</div>\n\n\n    <h2>Percent of Total Shades in Each Lightness Range by Category</h2>\n<div class='chart-container'>\n\n    {#each catData as data}\n        <div class='cat-container'>\n            <SmallMultContainer {data} type = \"byCat\"/>\n        </div>\n    {/each}\n</div>\n</section>\n\n<style>\n\n    section {\n        margin: 1rem;\n    }\n\n    .chart-container {\n        display: flex;\n        flex-wrap: wrap;\n        \n    }\n\n    .mini-container {\n        max-width: 40%;\n        width: 40%;\n        border: 1px solid #000;\n        margin: 1em;\n        padding: 0.5em;\n    }\n\n    .cat-container{\n        max-width: 30%;\n        width: 30%;\n        border: 1px solid #000;\n        margin: 1em;\n        padding: 0.5em;\n    }</style>",
    "<script>\n    import data from \"../data/shades_export.csv\"\n    import SwatchHistogram from \"./SwatchHistogram.svelte\"\n    import Gradient from \"./Gradient.svelte\"\n    import GradientAnnotation from \"./GradientAnnotation.svelte\"\n    import { LayerCake, Canvas, Svg } from \"layercake\";\n    import Switch from \"./Switch.svelte\"\n\n    let switchValue = {food: 'varied', drink: 'varied'}\n\n    const xKey = 'lightness'\n\n    //$: filteredData = data.filter(d => d.category === 'food').filter(d => switchValue === 'varied' ? d.namingScheme === 'variety' : d.namingScheme === 'NA' )\n\n    const sections = ['drink', 'food']\n\n    function filterData(sectionName){\n        const cat = data.filter(d => d.category === sectionName)\n        const scheme = cat.filter(d => switchValue[sectionName] === 'varied' ? \n            d.namingScheme === 'variety' : d.namingScheme === 'NA') \n            console.log({cat, scheme, switchValue, sectionName})\n        return cat\n    }\n\n $: switchValue.food, filterData('food')\n $: switchValue.drink, filterData('drink')\n   \n</script>\n\n<h2>Food and Drink</h2>\n{#each sections as sectionLabel}\n    <div class='container'>\n        <h3>Shades with {sectionLabel} Items in the name</h3>\n        <div class='chart-container container-hist'>\n            <!-- <Switch bind:value={switchValue[sectionLabel]} label=\"Choose a naming scheme\" design=\"multi\" options={['consistent', 'varied']}  /> -->\n            <LayerCake data={filterData(sectionLabel)} x = {d => d.lightness}\n                padding={ { top: 20, right: 20, bottom: 20, left: 20 } }\n                xDomain = {[0.15, 0.99]}>\n                <Canvas>\n                    <Gradient /> \n                </Canvas>\n                <Canvas class=\"hist\">\n                    <SwatchHistogram blockWidth={20}/>\n                </Canvas>\n            </LayerCake>\n        </div>\n\n    </div>\n{/each}\n\n\n\n<style>\n    .chart-container{\n        height: 1000px;\n    }</style>",
    "<script>\n    import Histogram from \"./Histogram.svelte\"\n    import GradientHistogram from \"./GradientHistogram.svelte\"\n    import { LayerCake, Canvas } from \"layercake\";\n    import { scaleBand, scaleLinear } from 'd3-scale';\n    import { extent, range, bin, groups, ascending, rollups, descending } from 'd3-array'\n    import data from \"../data/shades_export.csv\"\n\n    export let prose;\n    let maxCol = 10;\n\n\n    // figure out which bin each shade goes in\n    $: lightBin = bin().thresholds(maxCol).domain([0, 1]).value(d => d.lightness)\n\n    $: filteredData = data.filter(d => d.base !== (\"NA\")).filter(d => d.base !== \"\")\n\n\n    $: allBinData = lightBin(filteredData)\n\n    $: top = []\n    $: allBinData.forEach(bin => {\n       const groups = rollups(bin, v => v.length, d => d.name).sort((a, b) => descending(a[1], b[1])).slice(0,5)\n        top.push(groups)\n    })\n\n\n    function filterData(cut){\n        let binnedData = null;\n        if (cut === 'numbers') binnedData = lightBin(data.filter(d => d.category === 'NA'))\n        else if (cut === 'rock') binnedData = lightBin(data.filter(d => d.category === 'rock' || d.category === 'gem'))\n        else if (cut === 'wood') binnedData = lightBin(data.filter(d => d.category === 'wood' || d.category === 'plant'))\n        else binnedData = lightBin(data.filter(d => d.category === cut))\n\n        // condense multiple instances of a single name into one\n        let condensedData = []\n        binnedData.forEach(bin => {\n            if (bin.length > 0){\n                const sorted = bin.sort((a,b) => ascending(a.name, b.name) )\n                condensedData.push(groups(sorted, d => d.name)) \n            } else condensedData.push([])\n        })\n\n        return condensedData;\n    }\n\n    function filterFlat(cut){\n        if (cut === 'numbers') return data.filter(d => d.category === 'NA')\n        else return data.filter(d => d.category === cut)\n    }\n</script>\n\n\n\n{#each prose as {sub, text}}\n    <h3>{sub}</h3>\n    <!-- <p class='prose'>{text}</p>\n    <div class='chart-container'>\n        <LayerCake data={filterData(sub)}>\n            <Histogram />\n        </LayerCake>\n    </div> -->\n\n    <div class='chart-container container-grad'>\n        <LayerCake data={filterFlat(sub)}>\n            <Canvas>\n                <GradientHistogram />\n            </Canvas>\n\n        </LayerCake>\n    </div>\n    \n{/each}\n\n<style>\n    h3 {\n        text-transform: uppercase;\n        text-align: center;\n        font-weight: bold;\n        margin-top: 3em;\n    }\n\n    p {\n        text-align: center;\n    }\n\n    .container-grad {\n        height: 300px;\n    }</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n    import Column from \"./Column.svelte\"\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data } = getContext('LayerCake');\n\n</script>\n\n<div class='histogram__container'>\n\n    {#each $data as d, i}\n        <Column group = {d} />\n    {/each}\n</div>\n\n<style>\n    .histogram__container{\n        display: flex;\n        flex-direction: row;\n    }</style>\n\n",
    "<script>\nimport copy from \"../data/copy.json\";\n</script>\n\n<section class='intro'>\n    <h1>{copy.title}</h1>\n    <h2>{copy.dek}</h2>\n\n    <p class='prose'>{copy.intro}</p>\n</section>\n\n<style>\nsection {\n    padding: 1rem;\n}</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data, x, xGet, xScale } = getContext('LayerCake');\n</script>   \n\n\n        {#each $data as d, i}\n        <div class='container'>\n            <p class='category'>{d.category}</p>\n            <div class='bar' style=\"width:{$xGet(d)}px; background-color:{d.hex}\"></div> \n            <p class='percent'>{d.percent}%</p>\n        </div>\n        \n        {/each}\n\n\n<style>\n \n    .container {\n        display: flex; \n        flex-direction: row;\n        align-items: center;\n        position: relative;\n    }\n\n    .bar {\n        height: 1em;\n        margin: 0 0.4em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    .category {\n        width: 30%;\n        min-width: 30%;\n        text-align: right;\n    }\n\n    .percent {\n        font-size: small;\n        color: gray;\n    }</style>",
    "<script>\n    // Import the getContext function from svelte\n    import { getContext } from 'svelte';\n\n    // Access the context using the 'LayerCake' keyword\n    // Grab some helpful functions\n    const { data, x, xGet, xScale } = getContext('LayerCake');\n</script>   \n\n\n        <div class='container'>\n            <p class='category'>{$data.category}</p>\n            {#each $data.values as d}\n            <div class='bar-container'>\n                \n                    <div class='bar' style=\"width:{$xGet(d)}px; background-color:{d.hex}\"></div> \n                    <p class='percent'>{d.percent}%</p>\n                \n            </div>\n{/each}\n\n        </div> \n    \n \n\n\n<style>\n\n    .container {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .bar-container {\n        display: flex; \n        flex-direction: row;\n        align-items: center;\n        position: relative;\n    }\n\n    .bar {\n        height: 1em;\n        margin: 0 0.4em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    .category {\n        width: 30%;\n        min-width: 30%;\n        text-align: left;\n        text-transform: uppercase;\n        margin: 0.2em 0.4em;\n    }\n\n    .percent {\n        font-size: small;\n        color: gray;\n    }</style>",
    "<script>\n    import copy from \"../data/copy.json\";\n    import NudeElement from \"./NudeElement.svelte\";\n\n    export let state = \"on\";\n    let activeStep = \"all\";\n\n    function updateStep(){\n\n    }\n\n</script>\n\n{#if state === \"on\"}\n    <div class='scroll'>\n            <div class='step-container'>\n            {#each copy.steps as step, i}\n                <div class='step' data-step={step.step}>\n                    <p>{step.text}</p>\n                    <button on:click=\"{() => activeStep = step.step}\">Update Step</button>\n                </div>\n            {/each}\n        </div>\n        <div class='element element-scroll'>\n            <NudeElement step = {activeStep} />\n        </div>\n\n    </div>\n\n{:else}\n    <div class='standard'>\n        {#each copy.steps as step, i}\n        <div class='standard-group'>\n            <p>{step.text}</p>\n            <div class='element element-standard'>\n                <NudeElement step = {step.step} />\n            </div>\n        </div>\n    {/each}\n    </div>\n\n{/if}\n\n<style>\n    .scroll, .standard-group {\n        display: flex;\n    }\n\n    .standard-group {\n        flex-direction: column;\n    }\n\n    .element-scroll {\n        width: 50%;\n        min-width: 50%;\n        margin-left: 3rem;\n    }\n\n    .standard {\n        max-width: 50rem;\n        margin: 0 auto;\n    }</style>",
    "<script>\n    import data from \"../data/nude_export.csv\"\n    import SwatchHistogram from \"./SwatchHistogram.svelte\"\n    import Gradient from \"./Gradient.svelte\"\n    import GradientAnnotation from \"./GradientAnnotation.svelte\"\n    import { LayerCake, Canvas, Svg } from \"layercake\";\n\n    export let step;\n\n    const xKey = 'lightness'\n    \n\n    $: filterValue = step === 'natural' ? 'natural' : 'nude'\n    $: blockValue = step === 'all' || step === 'sort' ? 'off' : 'on'\n\n    $: filteredData = data.filter(d => d.namingScheme === filterValue)\n\n</script>\n\n<p>Currently on {step}</p>\n<div class='container'>\n    <h3>Shades with \"{filterValue}\" in the name</h3>\n    <div class='chart-container container-hist'>\n        <LayerCake data={filteredData} x = {d => d.lightness}\n            padding={ { top: 20, right: 20, bottom: 20, left: 20 } }\n            xDomain = {[0.15, 0.99]}>\n            <Canvas>\n                <Gradient {step}/> \n            </Canvas>\n            <Canvas class=\"hist\">\n                <SwatchHistogram blockWidth={20} {step} />\n            </Canvas>\n            <Svg zIndex={3}>\n                {#if (step !== 'all' && step !== 'sort') }\n                    <GradientAnnotation block={blockValue} />\n                {/if}\n            </Svg>\n        </LayerCake>\n    </div>\n\n</div>\n\n\n<style>\n    .chart-container{\n        position: relative;\n    }\n\n    .container-hist {\n        height: 500px;\n    }</style>",
    "<script>\n    // based on suggestions from:\n    // Inclusive Components by Heydon Pickering https://inclusive-components.design/toggle-button/\n    // On Designing and Building Toggle Switches by Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    // and this example by Scott O'hara https://codepen.io/scottohara/pen/zLZwNv \n\n    export let id = `switch-${Math.random()}`\n    export let label;\n    export let design = 'inner label'\n    export let options = [];\n\n    let checked = true;\n    export let value = 'on';\n\n    function handleClick(event){\n        const target = event.target\n\n        const state = target.getAttribute('aria-checked')\n\n        checked = state === 'true' ? false : true\n\n        value = checked === true ? 'on' : 'off'\n    }\n\n</script>\n\n{#if design == 'inner'}\n<div class=\"s s--inner\">\n    <span {id}>{label}</span>\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={id}\n        on:click={handleClick}>\n            <span>on</span>\n            <span>off</span>\n    </button>\n</div>\n{:else if design == 'slider'}\n<div class=\"s s--slider\">\n    <span {id}>{label}</span>\n    <button\n        role=\"switch\"\n        aria-checked={checked}\n        aria-labelledby={id}\n        on:click={handleClick}>\n    </button>\n</div>\n{:else}\n<div class=\"s s--multi\">\n    <fieldset>\n    <legend>{label}</legend>\n        {#each options as option, i}\n            <input type=\"radio\" id={`switch-${id}-${i}`} name=\"option\" value={option} bind:group={value}>\n            <label for={`switch-${id}-${i}`}>\n                {option}\n            </label> \n        {/each}\n    </fieldset>\n</div>\n\n\n{/if}\n\n<style>\n    /* .s {\n        --accent-color: cornflowerblue;\n\n    } */\n    /* Inner Design Option */\n    .s--inner button {\n        padding: 0.5em;\n        background-color: #fff;\n        border: 1px solid var(--gray);\n    }\n    [role='switch'][aria-checked='true'] :first-child,\n    [role='switch'][aria-checked='false'] :last-child {\n        background: var(--accent-color);\n        color: #fff;\n        border-radius: 0.25em;\n    }\n\n    .s--inner button span {\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none;\n        pointer-events:none;\n        padding: 0.25em;\n    }\n\n    .s--inner button:focus {\n        outline: var(--accent-color) solid 1px;\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 0.1em;\n    }\n\n    /* Slider Design Option */\n\n    .s--slider {\n        display: flex;\n        align-items: center;\n    }\n\n    .s--slider button {\n        width: 3em;\n        height: 1.6em;\n        border-radius: 1.5em;\n        position: relative;\n        margin: 0 0 0 0.5em;\n        background: var(--gray);\n        border: none;\n    }\n\n    .s--slider button::before {\n        content: '';\n        position: absolute;\n        width: 1.25em;\n        height: 1.25em;\n        background: #fff;\n        top: 0.2em;\n        right: 1.6em;\n        border-radius: 100%;\n        transition: transform 0.3s;\n    }\n\n    .s--slider button[aria-checked='true']{\n        background-color: var(--accent-color)\n    }\n\n    .s--slider button[aria-checked='true']::before{\n        transform: translateX(1.4em);\n        transition: transform 0.3s;\n    }\n\n    .s--slider button:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n    /* Multi Design Option */\n\n    /* Based on suggestions from Sara Soueidan https://www.sarasoueidan.com/blog/toggle-switch-design/\n    and this example from Scott O'hara https://codepen.io/scottohara/pen/zLZwNv */\n\n    .s--multi fieldset {\n        border: none;\n        padding: 0;\n        white-space: nowrap;\n    }\n\n    /* .s--multi legend {\n    font-size: 2px;\n    opacity: 0;\n    position: absolute;\n    } */\n\n    .s--multi label {\n        display: inline-block;\n        line-height: 1.6;\n        position: relative;\n        z-index: 2;\n    }\n\n    .s--multi input {\n        opacity: 0;\n        position: absolute;\n    }\n\n    .s--multi label:first-of-type {\n        padding-right: 5em;\n    }\n\n    .s--multi label:last-child {\n        margin-left: -5em;\n        padding-left: 5em;\n    }\n\n    .s--multi:focus-within label:first-of-type:after {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }\n\n\n\n    /* making the switch UI.  */\n    .s--multi label:first-of-type:before,\n    .s--multi label:first-of-type:after {\n        content: \"\";\n        height: 1.25em;\n        overflow: hidden;\n        pointer-events: none;\n        position: absolute;\n        vertical-align: middle;\n    }\n\n    .s--multi label:first-of-type:before {\n        border-radius: 100%;\n        z-index: 2;\n        position: absolute;\n        width: 1.25em;\n        height: 1.25em;\n        background: #fff;\n        top: 0.175em;\n        right: 1.2em;\n        transition: transform 0.3s;\n    }\n\n    .s--multi label:first-of-type:after {\n        background: var(--accent-color);\n        border-radius: 1em;\n        margin: 0 1em;\n        transition: background .2s ease-in-out;\n        width: 3em;\n        height: 1.6em;\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:after {\n        background: var(--gray);\n    }\n\n    .s--multi input:first-of-type:checked ~ label:first-of-type:before {\n        transform: translateX(-1.4em);\n    }\n\n    .s--multi input:last-of-type:checked ~ label:last-of-type {\n        z-index: 1;\n    }\n\n    .s--multi input:focus {\n        box-shadow: 0 0px 8px var(--accent-color);\n        border-radius: 1.5em;\n    }</style>",
    "<script>\n  import { onMount } from \"svelte\";\n  import { LayerCake, Svg } from \"layercake\";\n  import Scatter from \"./Scatter.svelte\";\n  import Icon from \"../helpers/Icon.svelte\";\n  import sampleData from \"../../data/demo/sample.csv\";\n  import copyData from \"../../data/demo/copy.json\";\n\n  const points = [\n    { x: 0, y: 1 },\n    { x: 10, y: 5 },\n    { x: 15, y: 10 },\n  ];\n  const r = 6;\n  const padding = { top: r * 2, right: r * 2, bottom: r * 2, left: r * 2 };\n</script>\n\n<section id=\"demo\">\n  <!-- copy from google doc -->\n  <div>\n    <h1>{copyData.headline}</h1>\n  </div>\n\n  <div>\n    <p>\n      Hello svelter! Here is an inline svg icon:\n      <!-- icon from tabler (see styling in global.css -->\n      <!-- {@html moodSmile} -->\n      <Icon name=\"feather\" />\n    </p>\n  </div>\n\n  <div>\n    <p>A table from CSV data</p>\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- data from csv -->\n        {#each sampleData as { name, value }}\n          <tr>\n            <td>{name}</td>\n            <td>{value}</td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n\n  <div>\n    <p>An image from \"public/assets\"</p>\n    <!-- image from public/assets -->\n    <img alt=\"sad toast\" src=\"assets/toast.png\" />\n  </div>\n\n  <div>\n    <p>A chart using Layercake</p>\n    <!-- chart using Layercake -->\n    <figure>\n      <LayerCake data=\"{points}\" x=\"x\" y=\"y\" padding=\"{padding}\">\n        <Svg>\n          <Scatter r=\"{r}\" />\n        </Svg>\n      </LayerCake>\n    </figure>\n    <div>\n      <h1>Heading 1</h1>\n      <h2>Heading 2</h2>\n      <h3>Heading 3</h3>\n      <h4>Heading 4</h4>\n      <h5>Heading 5</h5>\n      <h6>Heading 6</h6>\n      <p>\n        This is a paragraph with a\n        <strong>strong</strong>\n        tag and an\n        <em>em</em>\n        tag. And here is a\n        <mark>mark</mark>\n        tag. Oh and a\n        <a href=\"#demo\">link</a>\n        tag.\n      </p>\n    </div>\n\n    <div>\n      <p>Some Elements:</p>\n      <p><button>Button</button></p>\n      <p>\n        <select>\n          <option>Select</option>\n          <option>Thing 1</option>\n          <option>Thing 2</option>\n        </select>\n      </p>\n      <p><input placeholder=\"input\" /></p>\n      <p><input type=\"range\" /></p>\n    </div>\n  </div>\n</section>\n\n<style>\n  section {\n    padding: 1rem;\n  }\n\n  div {\n    margin-bottom: 2rem;\n  }\n\n  img {\n    width: 20rem;\n  }\n\n  figure {\n    position: relative;\n    width: 20rem;\n    height: 20rem;\n  }\n\n  td:nth-child(2),\n  th:nth-child(2) {\n    text-align: right;\n    padding: 0.5em;\n  }</style>\n",
    "<script>\n  import feather from \"feather-icons\";\n  export const directions = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n  export let name;\n  export let direction = \"n\";\n  export let strokeWidth;\n  export let stroke;\n\n  $: icon = feather.icons[name];\n  $: rotation = directions.indexOf(direction) * 45;\n  $: if (icon) {\n    if (stroke) icon.attrs[\"stroke\"] = stroke;\n    if (strokeWidth) icon.attrs[\"stroke-width\"] = strokeWidth;\n  }\n</script>\n\n{#if icon}\n  <svg {...icon.attrs} style=\"{`transform: rotate(${rotation}deg);`}\">\n    <g>\n      {@html icon.contents}\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n    overflow: visible;\n    transform-origin: 50% 50%;\n  }</style>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n\n  const v = Date.now();\n  const url = `https://pudding.cool/assets/data/stories.json?v=${v}`;\n\n  let localURL;\n\n  const links = [\n    { name: \"about\", url: \"https://pudding.cool/about\" },\n    { name: \"facebook\", url: \"https://facebook.com/pudding.viz/\" },\n    { name: \"twitter\", url: \"https://twitter.com/puddingviz/\" },\n    {\n      name: \"instagram\",\n      url: \"https://www.instagram.com/the.pudding\",\n    },\n    { name: \"patreon\", url: \"https://patreon.com/thepudding/\" },\n    { name: \"privacy\", url: \"https://pudding.cool/privacy/\" },\n    { name: \"newsletter\", url: \"http://eepurl.com/czym6f\" },\n    { name: \"rss\", url: \"https://pudding.cool/feed/index.xml\" },\n  ];\n\n  onMount(() => {\n    localURL = window.location.href;\n  });\n\n  const fetchData = (async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const stories = data.filter((d) => d.url !== localURL).slice(0, 4);\n    return stories;\n  })();\n</script>\n\n<footer>\n  <section class=\"stories\">\n    {#await fetchData then data}\n      {#each data as { hed, url, image }}\n        <div class=\"story\">\n          <a href=\"https://pudding.cool/{url}\">\n            <img\n              src=\"https://pudding.cool/common/assets/thumbnails/640/{image}.jpg\"\n              alt=\"{hed}\" />\n            <span>{hed}</span>\n          </a>\n        </div>\n      {/each}\n    {/await}\n  </section>\n\n  <section class=\"about\">\n    <div class=\"wordmark\">\n      {@html wordmark}\n    </div>\n    <p>\n      <a href=\"https://pudding.cool\">The Pudding</a>\n      is a digital publication that explains ideas debated in culture with\n      visual essays.\n    </p>\n  </section>\n\n  <section class=\"links\">\n    <ul>\n      {#each links as link}\n        <li>\n          <a href=\"{link.url}\">\n            <!-- TODO icon -->\n            <span>{link.name.toUpperCase()}</span>\n          </a>\n        </li>\n      {/each}\n    </ul>\n  </section>\n</footer>\n\n<style>\n  footer {\n    background-color: var(--text-main);\n    color: var(--background-body);\n    font-family: var(--sans);\n    padding: 3em 1em;\n    margin-top: 3em;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: var(--background-body);\n  }\n\n  .stories {\n    margin: 0 auto;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    max-width: 70em;\n  }\n\n  .story {\n    display: block;\n    width: 100%;\n    border: none;\n    margin-bottom: 3rem;\n  }\n\n  .story a {\n    display: block;\n    font-weight: 700;\n    text-decoration: none;\n  }\n\n  .story span {\n    display: block;\n    margin-top: 1em;\n    line-height: 1.2;\n  }\n\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .about {\n    margin: 3rem auto;\n    margin-top: 0;\n    text-align: center;\n  }\n\n  .links ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n\n  .links li {\n    display: flex;\n    padding: 0.5em 1em;\n  }\n\n  .links a {\n    display: flex;\n    border: none;\n    align-items: center;\n    text-decoration: none;\n  }\n\n  .links span {\n    margin-left: 0.5em;\n  }\n\n  @media only screen and (min-width: 30em) {\n    .story {\n      width: 50%;\n      padding: 0 1em;\n    }\n  }\n\n  @media only screen and (min-width: 50em) {\n    .story {\n      width: 25%;\n      padding: 0 1em;\n    }\n  }</style>\n",
    "<script>\n  import wordmark from \"../../svg/pudding/wordmark.svg\";\n  import Switch from \"../Switch.svelte\"\n\n  export let state;\n</script>\n\n<header>\n  <Switch label=\"Scrollytelling\" design=\"slider\" bind:value={state} />\n  <div class=\"wordmark\">\n    <a href=\"https://pudding.cool\">{@html wordmark}</a>\n  </div>\n</header>\n\n<style>\n  .wordmark {\n    max-width: 10em;\n    margin: 1em auto;\n  }\n\n  .wordmark a {\n    border: none;\n    color: var(--fg);\n  }\n\n  .wordmark a:hover {\n    background-color: transparent;\n  }</style>\n"
  ],
  "names": [],
  "mappings": "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"
}